{"version":3,"sources":["webpack:///app.9f198500d0bf9344d7bd.js","webpack:///./src/main.ts","webpack:///./~/@angular/http/index.js","webpack:///./~/@angular/http/http.js","webpack:///./~/@angular/http/src/backends/browser_jsonp.js","webpack:///./~/@angular/http/src/backends/browser_xhr.js","webpack:///./~/@angular/http/src/backends/jsonp_backend.js","webpack:///./~/@angular/http/src/base_response_options.js","webpack:///./~/@angular/http/src/enums.js","webpack:///./~/@angular/http/src/headers.js","webpack:///./~/@angular/http/src/interfaces.js","webpack:///./~/@angular/http/src/static_response.js","webpack:///./~/@angular/http/src/http_utils.js","webpack:///./~/@angular/http/src/backends/xhr_backend.js","webpack:///./~/@angular/http/src/base_request_options.js","webpack:///./~/@angular/http/src/url_search_params.js","webpack:///./~/@angular/http/src/http.js","webpack:///./~/@angular/http/src/static_request.js","webpack:///./src/app/app.component.ts","webpack:///./src/app/navigation-boxes/navigation-box.component.ts","webpack:///./src/app/navigation-boxes/navigation-box.service.ts","webpack:///./src/app/navigation-boxes/navigation-box.model.ts","webpack:///./src/app/top-menu/top-menu.component.ts","webpack:///./src/app/top-menu/top-menu.service.ts","webpack:///./src/app/top-menu/top-menu.model.ts"],"names":["webpackJsonp","0","module","exports","__webpack_require__","platform_browser_dynamic_1","http_1","core_1","app_component_1","enableProdMode","bootstrap","AppComponent","HTTP_PROVIDERS","then","success","console","log","error","325","__export","m","p","hasOwnProperty","326","httpFactory","xhrBackend","requestOptions","Http","jsonpFactory","jsonpBackend","Jsonp","browser_jsonp_1","browser_xhr_1","jsonp_backend_1","xhr_backend_1","base_request_options_1","base_response_options_1","interfaces_1","browser_xhr_2","BrowserXhr","jsonp_backend_2","JSONPBackend","JSONPConnection","xhr_backend_2","CookieXSRFStrategy","XHRBackend","XHRConnection","base_request_options_2","BaseRequestOptions","RequestOptions","base_response_options_2","BaseResponseOptions","ResponseOptions","enums_1","ReadyState","RequestMethod","ResponseType","headers_1","Headers","http_2","interfaces_2","Connection","ConnectionBackend","XSRFStrategy","static_request_1","Request","static_response_1","Response","url_search_params_1","URLSearchParams","provide","useFactory","deps","useClass","useValue","HTTP_BINDINGS","JSONP_PROVIDERS","BrowserJsonp","JSONPBackend_","JSON_BINDINGS","327","_getJsonpConnections","_jsonpConnections","lang_1","global","JSONP_HOME","_nextRequestId","prototype","build","url","node","document","createElement","src","nextRequestID","requestCallback","id","exposeConnection","connection","connections","removeConnection","send","body","appendChild","cleanup","parentNode","removeChild","decorators","type","Injectable","328","329","XMLHttpRequest","ctorParameters","330","__extends","this","d","b","__","constructor","Object","create","Observable_1","exceptions_1","JSONP_ERR_NO_CALLBACK","JSONP_ERR_WRONG_METHOD","JSONPConnection_","_super","req","_dom","baseResponseOptions","_this","call","_finished","method","Get","makeTypeError","request","response","Observable","responseObserver","readyState","Loading","_id","callback","indexOf","StringWrapper","replace","lastIndexOf","length","substring","script","_script","onLoad","event","Cancelled","Done","responseOptions_1","Error","isPresent","merge","responseOptions","_responseData","next","complete","onError","message","addEventListener","removeEventListener","finished","data","apply","arguments","_browserJSONP","_baseResponseOptions","createConnection","331","_a","_b","status","headers","statusText","options","Default","332","ContentType","333","collection_1","_headersMap","Map","isBlank","StringMapWrapper","forEach","v","k","set","isListLikeIterable","fromResponseHeaderString","headersString","trim","split","map","val","key","parts","slice","join","reduce","value","append","name","mapName","get","list","push","fn","header","ListWrapper","first","has","keys","MapWrapper","pushValue","values","toJSON","serializableHeaders","iterateListLike","concat","getAll","entries","BaseException","334","335","336","337","338","339","http_utils_1","_body","ok","blob","json","jsonResponse","isJsObject","isString","Json","parse","text","toString","arrayBuffer","340","normalizeMethodName","originalMethod","g0","g1","g2","toUpperCase","toLowerCase","getResponseURL","xhr","responseURL","test","getAllResponseHeaders","getResponseHeader","isSuccess","lang_2","341","platform_browser_1","XSSI_PREFIX","browserXHR","_xhr","open","withCredentials","responseText","err","setDetectedContentType","setRequestHeader","getBody","abort","contentType","NONE","JSON","FORM","TEXT","BLOB","_cookieName","_headerName","configureRequest","xsrfToken","__platform_browser_private__","getDOM","getCookie","_browserXHR","_xsrfStrategy","342","search","clone","343","paramParser","rawParams","params","param","paramsMap","appendAll","storedParam","mapParam","clear","setAll","searchParams","i","replaceAll","paramsList","encodeURIComponent","344","httpRequest","backend","mergeOptions","defaultOpts","providedOpts","newOptions","_backend","_defaultOptions","responseObservable","post","Post","put","Put","Delete","patch","Patch","head","Head","defaultOptions","345","prefix","contains","detectContentType","stringify","ArrayBuffer","Blob","FormData","FORM_DATA","ARRAY_BUFFER","noop","w","window","346","__decorate","target","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadata","navigation_box_component_1","top_menu_component_1","Component","selector","templateUrl","directives","TopMenuComponent","NavigationBoxComponent","347","navigation_box_service_1","navigationBoxService","getNavigationBoxes","subscribe","navigationBoxes","errorMessage","isCollapsed","navBox","isHidden","isHovered","mouseEventFunc","ngOnInit","toggle","repeaterIndex","item","providers","NavigationBoxService","348","navigation_box_model_1","http","apiUrl","responseData","navBoxes","result","NavigationBox","linkDescription","linkText","linkUrl","handleError","356","displayShortDescription","description","trimmedString","357","top_menu_service_1","topMenuService","show","getMenuItems","topMenuItems","displayMenuForMobile","TopMenuService","358","top_menu_model_1","menuItems","results","TopMenuItem","title","359"],"mappings":"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","file":"app.9f198500d0bf9344d7bd.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar platform_browser_dynamic_1 = __webpack_require__(1);\r\n\tvar http_1 = __webpack_require__(325);\r\n\tvar core_1 = __webpack_require__(5);\r\n\tvar app_component_1 = __webpack_require__(346);\r\n\tif (true) {\r\n\t    core_1.enableProdMode();\r\n\t}\r\n\tplatform_browser_dynamic_1.bootstrap(app_component_1.AppComponent, [http_1.HTTP_PROVIDERS]).\r\n\t    then(function (success) { return console.log(\"Bootstrap success\"); })\r\n\t    .catch(function (error) { return console.log(error); });\r\n\t;\r\n\n\n/***/ },\n\n/***/ 325:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t__export(__webpack_require__(326));\n\t//# sourceMappingURL=index.js.map\n\n/***/ },\n\n/***/ 326:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar browser_jsonp_1 = __webpack_require__(327);\n\tvar browser_xhr_1 = __webpack_require__(329);\n\tvar jsonp_backend_1 = __webpack_require__(330);\n\tvar xhr_backend_1 = __webpack_require__(341);\n\tvar base_request_options_1 = __webpack_require__(342);\n\tvar base_response_options_1 = __webpack_require__(331);\n\tvar http_1 = __webpack_require__(344);\n\tvar interfaces_1 = __webpack_require__(338);\n\tvar browser_xhr_2 = __webpack_require__(329);\n\texports.BrowserXhr = browser_xhr_2.BrowserXhr;\n\tvar jsonp_backend_2 = __webpack_require__(330);\n\texports.JSONPBackend = jsonp_backend_2.JSONPBackend;\n\texports.JSONPConnection = jsonp_backend_2.JSONPConnection;\n\tvar xhr_backend_2 = __webpack_require__(341);\n\texports.CookieXSRFStrategy = xhr_backend_2.CookieXSRFStrategy;\n\texports.XHRBackend = xhr_backend_2.XHRBackend;\n\texports.XHRConnection = xhr_backend_2.XHRConnection;\n\tvar base_request_options_2 = __webpack_require__(342);\n\texports.BaseRequestOptions = base_request_options_2.BaseRequestOptions;\n\texports.RequestOptions = base_request_options_2.RequestOptions;\n\tvar base_response_options_2 = __webpack_require__(331);\n\texports.BaseResponseOptions = base_response_options_2.BaseResponseOptions;\n\texports.ResponseOptions = base_response_options_2.ResponseOptions;\n\tvar enums_1 = __webpack_require__(332);\n\texports.ReadyState = enums_1.ReadyState;\n\texports.RequestMethod = enums_1.RequestMethod;\n\texports.ResponseType = enums_1.ResponseType;\n\tvar headers_1 = __webpack_require__(333);\n\texports.Headers = headers_1.Headers;\n\tvar http_2 = __webpack_require__(344);\n\texports.Http = http_2.Http;\n\texports.Jsonp = http_2.Jsonp;\n\tvar interfaces_2 = __webpack_require__(338);\n\texports.Connection = interfaces_2.Connection;\n\texports.ConnectionBackend = interfaces_2.ConnectionBackend;\n\texports.XSRFStrategy = interfaces_2.XSRFStrategy;\n\tvar static_request_1 = __webpack_require__(345);\n\texports.Request = static_request_1.Request;\n\tvar static_response_1 = __webpack_require__(339);\n\texports.Response = static_response_1.Response;\n\tvar url_search_params_1 = __webpack_require__(343);\n\texports.URLSearchParams = url_search_params_1.URLSearchParams;\n\t/**\n\t * Provides a basic set of injectables to use the {@link Http} service in any application.\n\t *\n\t * The `HTTP_PROVIDERS` should be included either in a component's injector,\n\t * or in the root injector when bootstrapping an application.\n\t *\n\t * ### Example ([live demo](http://plnkr.co/edit/snj7Nv?p=preview))\n\t *\n\t * ```\n\t * import {Component} from '@angular/core';\n\t * import {bootstrap} from '@angular/platform-browser/browser';\n\t * import {NgFor} from '@angular/common';\n\t * import {HTTP_PROVIDERS, Http} from '@angular/http';\n\t *\n\t * @Component({\n\t *   selector: 'app',\n\t *   providers: [HTTP_PROVIDERS],\n\t *   template: `\n\t *     <div>\n\t *       <h1>People</h1>\n\t *       <ul>\n\t *         <li *ngFor=\"let person of people\">\n\t *           {{person.name}}\n\t *         </li>\n\t *       </ul>\n\t *     </div>\n\t *   `,\n\t *   directives: [NgFor]\n\t * })\n\t * export class App {\n\t *   people: Object[];\n\t *   constructor(http:Http) {\n\t *     http.get('people.json').subscribe(res => {\n\t *       this.people = res.json();\n\t *     });\n\t *   }\n\t *   active:boolean = false;\n\t *   toggleActiveState() {\n\t *     this.active = !this.active;\n\t *   }\n\t * }\n\t *\n\t * bootstrap(App)\n\t *   .catch(err => console.error(err));\n\t * ```\n\t *\n\t * The primary public API included in `HTTP_PROVIDERS` is the {@link Http} class.\n\t * However, other providers required by `Http` are included,\n\t * which may be beneficial to override in certain cases.\n\t *\n\t * The providers included in `HTTP_PROVIDERS` include:\n\t *  * {@link Http}\n\t *  * {@link XHRBackend}\n\t *  * {@link XSRFStrategy} - Bound to {@link CookieXSRFStrategy} class (see below)\n\t *  * `BrowserXHR` - Private factory to create `XMLHttpRequest` instances\n\t *  * {@link RequestOptions} - Bound to {@link BaseRequestOptions} class\n\t *  * {@link ResponseOptions} - Bound to {@link BaseResponseOptions} class\n\t *\n\t * There may be cases where it makes sense to extend the base request options,\n\t * such as to add a search string to be appended to all URLs.\n\t * To accomplish this, a new provider for {@link RequestOptions} should\n\t * be added in the same injector as `HTTP_PROVIDERS`.\n\t *\n\t * ### Example ([live demo](http://plnkr.co/edit/aCMEXi?p=preview))\n\t *\n\t * ```\n\t * import {provide} from '@angular/core';\n\t * import {bootstrap} from '@angular/platform-browser/browser';\n\t * import {HTTP_PROVIDERS, BaseRequestOptions, RequestOptions} from '@angular/http';\n\t *\n\t * class MyOptions extends BaseRequestOptions {\n\t *   search: string = 'coreTeam=true';\n\t * }\n\t *\n\t * bootstrap(App, [HTTP_PROVIDERS, {provide: RequestOptions, useClass: MyOptions}])\n\t *   .catch(err => console.error(err));\n\t * ```\n\t *\n\t * Likewise, to use a mock backend for unit tests, the {@link XHRBackend}\n\t * provider should be bound to {@link MockBackend}.\n\t *\n\t * ### Example ([live demo](http://plnkr.co/edit/7LWALD?p=preview))\n\t *\n\t * ```\n\t * import {provide} from '@angular/core';\n\t * import {bootstrap} from '@angular/platform-browser/browser';\n\t * import {HTTP_PROVIDERS, Http, Response, XHRBackend} from '@angular/http';\n\t * import {MockBackend} from '@angular/http/testing';\n\t *\n\t * var people = [{name: 'Jeff'}, {name: 'Tobias'}];\n\t *\n\t * var injector = Injector.resolveAndCreate([\n\t *   HTTP_PROVIDERS,\n\t *   MockBackend,\n\t *   {provide: XHRBackend, useExisting: MockBackend}\n\t * ]);\n\t * var http = injector.get(Http);\n\t * var backend = injector.get(MockBackend);\n\t *\n\t * // Listen for any new requests\n\t * backend.connections.observer({\n\t *   next: connection => {\n\t *     var response = new Response({body: people});\n\t *     setTimeout(() => {\n\t *       // Send a response to the request\n\t *       connection.mockRespond(response);\n\t *     });\n\t *   }\n\t * });\n\t *\n\t * http.get('people.json').observer({\n\t *   next: res => {\n\t *     // Response came from mock backend\n\t *     console.log('first person', res.json()[0].name);\n\t *   }\n\t * });\n\t * ```\n\t *\n\t * `XSRFStrategy` allows customizing how the application protects itself against Cross Site Request\n\t * Forgery (XSRF) attacks. By default, Angular will look for a cookie called `'XSRF-TOKEN'`, and set\n\t * an HTTP request header called `'X-XSRF-TOKEN'` with the value of the cookie on each request,\n\t * allowing the server side to validate that the request comes from its own front end.\n\t *\n\t * Applications can override the names used by configuring a different `XSRFStrategy` instance. Most\n\t * commonly, applications will configure a `CookieXSRFStrategy` with different cookie or header\n\t * names, but if needed, they can supply a completely custom implementation.\n\t *\n\t * See the security documentation for more information.\n\t *\n\t * ### Example\n\t *\n\t * ```\n\t * import {provide} from '@angular/core';\n\t * import {bootstrap} from '@angular/platform-browser/browser';\n\t * import {HTTP_PROVIDERS, XSRFStrategy, CookieXSRFStrategy} from '@angular/http';\n\t *\n\t * bootstrap(\n\t *     App,\n\t *     [HTTP_PROVIDERS, {provide: XSRFStrategy,\n\t *         useValue: new CookieXSRFStrategy('MY-XSRF-COOKIE-NAME', 'X-MY-XSRF-HEADER-NAME')}])\n\t *   .catch(err => console.error(err));\n\t * ```\n\t */\n\texports.HTTP_PROVIDERS = [\n\t    // TODO(pascal): use factory type annotations once supported in DI\n\t    // issue: https://github.com/angular/angular/issues/3183\n\t    { provide: http_1.Http, useFactory: httpFactory, deps: [xhr_backend_1.XHRBackend, base_request_options_1.RequestOptions] },\n\t    browser_xhr_1.BrowserXhr,\n\t    { provide: base_request_options_1.RequestOptions, useClass: base_request_options_1.BaseRequestOptions },\n\t    { provide: base_response_options_1.ResponseOptions, useClass: base_response_options_1.BaseResponseOptions },\n\t    xhr_backend_1.XHRBackend,\n\t    { provide: interfaces_1.XSRFStrategy, useValue: new xhr_backend_1.CookieXSRFStrategy() },\n\t];\n\tfunction httpFactory(xhrBackend, requestOptions) {\n\t    return new http_1.Http(xhrBackend, requestOptions);\n\t}\n\texports.httpFactory = httpFactory;\n\t/**\n\t * See {@link HTTP_PROVIDERS} instead.\n\t *\n\t * @deprecated\n\t */\n\texports.HTTP_BINDINGS = exports.HTTP_PROVIDERS;\n\t/**\n\t * Provides a basic set of providers to use the {@link Jsonp} service in any application.\n\t *\n\t * The `JSONP_PROVIDERS` should be included either in a component's injector,\n\t * or in the root injector when bootstrapping an application.\n\t *\n\t * ### Example ([live demo](http://plnkr.co/edit/vmeN4F?p=preview))\n\t *\n\t * ```\n\t * import {Component} from '@angular/core';\n\t * import {NgFor} from '@angular/common';\n\t * import {JSONP_PROVIDERS, Jsonp} from '@angular/http';\n\t *\n\t * @Component({\n\t *   selector: 'app',\n\t *   providers: [JSONP_PROVIDERS],\n\t *   template: `\n\t *     <div>\n\t *       <h1>People</h1>\n\t *       <ul>\n\t *         <li *ngFor=\"let person of people\">\n\t *           {{person.name}}\n\t *         </li>\n\t *       </ul>\n\t *     </div>\n\t *   `,\n\t *   directives: [NgFor]\n\t * })\n\t * export class App {\n\t *   people: Array<Object>;\n\t *   constructor(jsonp:Jsonp) {\n\t *     jsonp.request('people.json').subscribe(res => {\n\t *       this.people = res.json();\n\t *     })\n\t *   }\n\t * }\n\t * ```\n\t *\n\t * The primary public API included in `JSONP_PROVIDERS` is the {@link Jsonp} class.\n\t * However, other providers required by `Jsonp` are included,\n\t * which may be beneficial to override in certain cases.\n\t *\n\t * The providers included in `JSONP_PROVIDERS` include:\n\t *  * {@link Jsonp}\n\t *  * {@link JSONPBackend}\n\t *  * `BrowserJsonp` - Private factory\n\t *  * {@link RequestOptions} - Bound to {@link BaseRequestOptions} class\n\t *  * {@link ResponseOptions} - Bound to {@link BaseResponseOptions} class\n\t *\n\t * There may be cases where it makes sense to extend the base request options,\n\t * such as to add a search string to be appended to all URLs.\n\t * To accomplish this, a new provider for {@link RequestOptions} should\n\t * be added in the same injector as `JSONP_PROVIDERS`.\n\t *\n\t * ### Example ([live demo](http://plnkr.co/edit/TFug7x?p=preview))\n\t *\n\t * ```\n\t * import {provide} from '@angular/core';\n\t * import {bootstrap} from '@angular/platform-browser/browser';\n\t * import {JSONP_PROVIDERS, BaseRequestOptions, RequestOptions} from '@angular/http';\n\t *\n\t * class MyOptions extends BaseRequestOptions {\n\t *   search: string = 'coreTeam=true';\n\t * }\n\t *\n\t * bootstrap(App, [JSONP_PROVIDERS, {provide: RequestOptions, useClass: MyOptions}])\n\t *   .catch(err => console.error(err));\n\t * ```\n\t *\n\t * Likewise, to use a mock backend for unit tests, the {@link JSONPBackend}\n\t * provider should be bound to {@link MockBackend}.\n\t *\n\t * ### Example ([live demo](http://plnkr.co/edit/HDqZWL?p=preview))\n\t *\n\t * ```\n\t * import {provide, Injector} from '@angular/core';\n\t * import {JSONP_PROVIDERS, Jsonp, Response, JSONPBackend} from '@angular/http';\n\t * import {MockBackend} from '@angular/http/testing';\n\t *\n\t * var people = [{name: 'Jeff'}, {name: 'Tobias'}];\n\t * var injector = Injector.resolveAndCreate([\n\t *   JSONP_PROVIDERS,\n\t *   MockBackend,\n\t *   {provide: JSONPBackend, useExisting: MockBackend}\n\t * ]);\n\t * var jsonp = injector.get(Jsonp);\n\t * var backend = injector.get(MockBackend);\n\t *\n\t * // Listen for any new requests\n\t * backend.connections.observer({\n\t *   next: connection => {\n\t *     var response = new Response({body: people});\n\t *     setTimeout(() => {\n\t *       // Send a response to the request\n\t *       connection.mockRespond(response);\n\t *     });\n\t *   }\n\t * });\n\t\n\t * jsonp.get('people.json').observer({\n\t *   next: res => {\n\t *     // Response came from mock backend\n\t *     console.log('first person', res.json()[0].name);\n\t *   }\n\t * });\n\t * ```\n\t */\n\texports.JSONP_PROVIDERS = [\n\t    // TODO(pascal): use factory type annotations once supported in DI\n\t    // issue: https://github.com/angular/angular/issues/3183\n\t    { provide: http_1.Jsonp, useFactory: jsonpFactory, deps: [jsonp_backend_1.JSONPBackend, base_request_options_1.RequestOptions] },\n\t    browser_jsonp_1.BrowserJsonp,\n\t    { provide: base_request_options_1.RequestOptions, useClass: base_request_options_1.BaseRequestOptions },\n\t    { provide: base_response_options_1.ResponseOptions, useClass: base_response_options_1.BaseResponseOptions },\n\t    { provide: jsonp_backend_1.JSONPBackend, useClass: jsonp_backend_1.JSONPBackend_ },\n\t];\n\tfunction jsonpFactory(jsonpBackend, requestOptions) {\n\t    return new http_1.Jsonp(jsonpBackend, requestOptions);\n\t}\n\t/**\n\t * See {@link JSONP_PROVIDERS} instead.\n\t *\n\t * @deprecated\n\t */\n\texports.JSON_BINDINGS = exports.JSONP_PROVIDERS;\n\t//# sourceMappingURL=http.js.map\n\n/***/ },\n\n/***/ 327:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar core_1 = __webpack_require__(5);\n\tvar lang_1 = __webpack_require__(328);\n\tvar _nextRequestId = 0;\n\texports.JSONP_HOME = '__ng_jsonp__';\n\tvar _jsonpConnections = null;\n\tfunction _getJsonpConnections() {\n\t    if (_jsonpConnections === null) {\n\t        _jsonpConnections = lang_1.global[exports.JSONP_HOME] = {};\n\t    }\n\t    return _jsonpConnections;\n\t}\n\tvar BrowserJsonp = (function () {\n\t    function BrowserJsonp() {\n\t    }\n\t    // Construct a <script> element with the specified URL\n\t    BrowserJsonp.prototype.build = function (url) {\n\t        var node = document.createElement('script');\n\t        node.src = url;\n\t        return node;\n\t    };\n\t    BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n\t    BrowserJsonp.prototype.requestCallback = function (id) { return exports.JSONP_HOME + \".\" + id + \".finished\"; };\n\t    BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n\t        var connections = _getJsonpConnections();\n\t        connections[id] = connection;\n\t    };\n\t    BrowserJsonp.prototype.removeConnection = function (id) {\n\t        var connections = _getJsonpConnections();\n\t        connections[id] = null;\n\t    };\n\t    // Attach the <script> element to the DOM\n\t    BrowserJsonp.prototype.send = function (node) { document.body.appendChild((node)); };\n\t    // Remove <script> element from the DOM\n\t    BrowserJsonp.prototype.cleanup = function (node) {\n\t        if (node.parentNode) {\n\t            node.parentNode.removeChild((node));\n\t        }\n\t    };\n\t    /** @nocollapse */\n\t    BrowserJsonp.decorators = [\n\t        { type: core_1.Injectable },\n\t    ];\n\t    return BrowserJsonp;\n\t}());\n\texports.BrowserJsonp = BrowserJsonp;\n\t//# sourceMappingURL=browser_jsonp.js.map\n\n/***/ },\n\n/***/ 328:\n9,\n\n/***/ 329:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar core_1 = __webpack_require__(5);\n\tvar BrowserXhr = (function () {\n\t    function BrowserXhr() {\n\t    }\n\t    BrowserXhr.prototype.build = function () { return (new XMLHttpRequest()); };\n\t    /** @nocollapse */\n\t    BrowserXhr.decorators = [\n\t        { type: core_1.Injectable },\n\t    ];\n\t    /** @nocollapse */\n\t    BrowserXhr.ctorParameters = [];\n\t    return BrowserXhr;\n\t}());\n\texports.BrowserXhr = BrowserXhr;\n\t//# sourceMappingURL=browser_xhr.js.map\n\n/***/ },\n\n/***/ 330:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar Observable_1 = __webpack_require__(38);\n\tvar base_response_options_1 = __webpack_require__(331);\n\tvar enums_1 = __webpack_require__(332);\n\tvar exceptions_1 = __webpack_require__(334);\n\tvar lang_1 = __webpack_require__(328);\n\tvar interfaces_1 = __webpack_require__(338);\n\tvar static_response_1 = __webpack_require__(339);\n\tvar browser_jsonp_1 = __webpack_require__(327);\n\tvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n\tvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n\t/**\n\t * Abstract base class for an in-flight JSONP request.\n\t */\n\tvar JSONPConnection = (function () {\n\t    function JSONPConnection() {\n\t    }\n\t    return JSONPConnection;\n\t}());\n\texports.JSONPConnection = JSONPConnection;\n\tvar JSONPConnection_ = (function (_super) {\n\t    __extends(JSONPConnection_, _super);\n\t    function JSONPConnection_(req, _dom, baseResponseOptions) {\n\t        var _this = this;\n\t        _super.call(this);\n\t        this._dom = _dom;\n\t        this.baseResponseOptions = baseResponseOptions;\n\t        this._finished = false;\n\t        if (req.method !== enums_1.RequestMethod.Get) {\n\t            throw exceptions_1.makeTypeError(JSONP_ERR_WRONG_METHOD);\n\t        }\n\t        this.request = req;\n\t        this.response = new Observable_1.Observable(function (responseObserver) {\n\t            _this.readyState = enums_1.ReadyState.Loading;\n\t            var id = _this._id = _dom.nextRequestID();\n\t            _dom.exposeConnection(id, _this);\n\t            // Workaround Dart\n\t            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n\t            var callback = _dom.requestCallback(_this._id);\n\t            var url = req.url;\n\t            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n\t                url = lang_1.StringWrapper.replace(url, '=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n\t            }\n\t            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n\t                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n\t            }\n\t            var script = _this._script = _dom.build(url);\n\t            var onLoad = function (event) {\n\t                if (_this.readyState === enums_1.ReadyState.Cancelled)\n\t                    return;\n\t                _this.readyState = enums_1.ReadyState.Done;\n\t                _dom.cleanup(script);\n\t                if (!_this._finished) {\n\t                    var responseOptions_1 = new base_response_options_1.ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: enums_1.ResponseType.Error, url: url });\n\t                    if (lang_1.isPresent(baseResponseOptions)) {\n\t                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n\t                    }\n\t                    responseObserver.error(new static_response_1.Response(responseOptions_1));\n\t                    return;\n\t                }\n\t                var responseOptions = new base_response_options_1.ResponseOptions({ body: _this._responseData, url: url });\n\t                if (lang_1.isPresent(_this.baseResponseOptions)) {\n\t                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\n\t                }\n\t                responseObserver.next(new static_response_1.Response(responseOptions));\n\t                responseObserver.complete();\n\t            };\n\t            var onError = function (error) {\n\t                if (_this.readyState === enums_1.ReadyState.Cancelled)\n\t                    return;\n\t                _this.readyState = enums_1.ReadyState.Done;\n\t                _dom.cleanup(script);\n\t                var responseOptions = new base_response_options_1.ResponseOptions({ body: error.message, type: enums_1.ResponseType.Error });\n\t                if (lang_1.isPresent(baseResponseOptions)) {\n\t                    responseOptions = baseResponseOptions.merge(responseOptions);\n\t                }\n\t                responseObserver.error(new static_response_1.Response(responseOptions));\n\t            };\n\t            script.addEventListener('load', onLoad);\n\t            script.addEventListener('error', onError);\n\t            _dom.send(script);\n\t            return function () {\n\t                _this.readyState = enums_1.ReadyState.Cancelled;\n\t                script.removeEventListener('load', onLoad);\n\t                script.removeEventListener('error', onError);\n\t                if (lang_1.isPresent(script)) {\n\t                    _this._dom.cleanup(script);\n\t                }\n\t            };\n\t        });\n\t    }\n\t    JSONPConnection_.prototype.finished = function (data) {\n\t        // Don't leak connections\n\t        this._finished = true;\n\t        this._dom.removeConnection(this._id);\n\t        if (this.readyState === enums_1.ReadyState.Cancelled)\n\t            return;\n\t        this._responseData = data;\n\t    };\n\t    return JSONPConnection_;\n\t}(JSONPConnection));\n\texports.JSONPConnection_ = JSONPConnection_;\n\t/**\n\t * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.\n\t */\n\tvar JSONPBackend = (function (_super) {\n\t    __extends(JSONPBackend, _super);\n\t    function JSONPBackend() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    return JSONPBackend;\n\t}(interfaces_1.ConnectionBackend));\n\texports.JSONPBackend = JSONPBackend;\n\tvar JSONPBackend_ = (function (_super) {\n\t    __extends(JSONPBackend_, _super);\n\t    function JSONPBackend_(_browserJSONP, _baseResponseOptions) {\n\t        _super.call(this);\n\t        this._browserJSONP = _browserJSONP;\n\t        this._baseResponseOptions = _baseResponseOptions;\n\t    }\n\t    JSONPBackend_.prototype.createConnection = function (request) {\n\t        return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n\t    };\n\t    /** @nocollapse */\n\t    JSONPBackend_.decorators = [\n\t        { type: core_1.Injectable },\n\t    ];\n\t    /** @nocollapse */\n\t    JSONPBackend_.ctorParameters = [\n\t        { type: browser_jsonp_1.BrowserJsonp, },\n\t        { type: base_response_options_1.ResponseOptions, },\n\t    ];\n\t    return JSONPBackend_;\n\t}(JSONPBackend));\n\texports.JSONPBackend_ = JSONPBackend_;\n\t//# sourceMappingURL=jsonp_backend.js.map\n\n/***/ },\n\n/***/ 331:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar lang_1 = __webpack_require__(328);\n\tvar enums_1 = __webpack_require__(332);\n\tvar headers_1 = __webpack_require__(333);\n\t/**\n\t * Creates a response options object to be optionally provided when instantiating a\n\t * {@link Response}.\n\t *\n\t * This class is based on the `ResponseInit` description in the [Fetch\n\t * Spec](https://fetch.spec.whatwg.org/#responseinit).\n\t *\n\t * All values are null by default. Typical defaults can be found in the\n\t * {@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n\t *\n\t * This class may be used in tests to build {@link Response Responses} for\n\t * mock responses (see {@link MockBackend}).\n\t *\n\t * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n\t *\n\t * ```typescript\n\t * import {ResponseOptions, Response} from '@angular/http';\n\t *\n\t * var options = new ResponseOptions({\n\t *   body: '{\"name\":\"Jeff\"}'\n\t * });\n\t * var res = new Response(options);\n\t *\n\t * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n\t * ```\n\t */\n\tvar ResponseOptions = (function () {\n\t    function ResponseOptions(_a) {\n\t        var _b = _a === void 0 ? {} : _a, body = _b.body, status = _b.status, headers = _b.headers, statusText = _b.statusText, type = _b.type, url = _b.url;\n\t        this.body = lang_1.isPresent(body) ? body : null;\n\t        this.status = lang_1.isPresent(status) ? status : null;\n\t        this.headers = lang_1.isPresent(headers) ? headers : null;\n\t        this.statusText = lang_1.isPresent(statusText) ? statusText : null;\n\t        this.type = lang_1.isPresent(type) ? type : null;\n\t        this.url = lang_1.isPresent(url) ? url : null;\n\t    }\n\t    /**\n\t     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n\t     * override\n\t     * existing values. This method will not change the values of the instance on which it is being\n\t     * called.\n\t     *\n\t     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n\t     * where certain properties may change from test to test.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n\t     *\n\t     * ```typescript\n\t     * import {ResponseOptions, Response} from '@angular/http';\n\t     *\n\t     * var options = new ResponseOptions({\n\t     *   body: {name: 'Jeff'}\n\t     * });\n\t     * var res = new Response(options.merge({\n\t     *   url: 'https://google.com'\n\t     * }));\n\t     * console.log('options.url:', options.url); // null\n\t     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n\t     * console.log('res.url:', res.url); // https://google.com\n\t     * ```\n\t     */\n\t    ResponseOptions.prototype.merge = function (options) {\n\t        return new ResponseOptions({\n\t            body: lang_1.isPresent(options) && lang_1.isPresent(options.body) ? options.body : this.body,\n\t            status: lang_1.isPresent(options) && lang_1.isPresent(options.status) ? options.status : this.status,\n\t            headers: lang_1.isPresent(options) && lang_1.isPresent(options.headers) ? options.headers : this.headers,\n\t            statusText: lang_1.isPresent(options) && lang_1.isPresent(options.statusText) ? options.statusText :\n\t                this.statusText,\n\t            type: lang_1.isPresent(options) && lang_1.isPresent(options.type) ? options.type : this.type,\n\t            url: lang_1.isPresent(options) && lang_1.isPresent(options.url) ? options.url : this.url,\n\t        });\n\t    };\n\t    return ResponseOptions;\n\t}());\n\texports.ResponseOptions = ResponseOptions;\n\tvar BaseResponseOptions = (function (_super) {\n\t    __extends(BaseResponseOptions, _super);\n\t    function BaseResponseOptions() {\n\t        _super.call(this, { status: 200, statusText: 'Ok', type: enums_1.ResponseType.Default, headers: new headers_1.Headers() });\n\t    }\n\t    /** @nocollapse */\n\t    BaseResponseOptions.decorators = [\n\t        { type: core_1.Injectable },\n\t    ];\n\t    /** @nocollapse */\n\t    BaseResponseOptions.ctorParameters = [];\n\t    return BaseResponseOptions;\n\t}(ResponseOptions));\n\texports.BaseResponseOptions = BaseResponseOptions;\n\t//# sourceMappingURL=base_response_options.js.map\n\n/***/ },\n\n/***/ 332:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * Supported http methods.\n\t */\n\t(function (RequestMethod) {\n\t    RequestMethod[RequestMethod[\"Get\"] = 0] = \"Get\";\n\t    RequestMethod[RequestMethod[\"Post\"] = 1] = \"Post\";\n\t    RequestMethod[RequestMethod[\"Put\"] = 2] = \"Put\";\n\t    RequestMethod[RequestMethod[\"Delete\"] = 3] = \"Delete\";\n\t    RequestMethod[RequestMethod[\"Options\"] = 4] = \"Options\";\n\t    RequestMethod[RequestMethod[\"Head\"] = 5] = \"Head\";\n\t    RequestMethod[RequestMethod[\"Patch\"] = 6] = \"Patch\";\n\t})(exports.RequestMethod || (exports.RequestMethod = {}));\n\tvar RequestMethod = exports.RequestMethod;\n\t/**\n\t * All possible states in which a connection can be, based on\n\t * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an\n\t * additional \"CANCELLED\" state.\n\t */\n\t(function (ReadyState) {\n\t    ReadyState[ReadyState[\"Unsent\"] = 0] = \"Unsent\";\n\t    ReadyState[ReadyState[\"Open\"] = 1] = \"Open\";\n\t    ReadyState[ReadyState[\"HeadersReceived\"] = 2] = \"HeadersReceived\";\n\t    ReadyState[ReadyState[\"Loading\"] = 3] = \"Loading\";\n\t    ReadyState[ReadyState[\"Done\"] = 4] = \"Done\";\n\t    ReadyState[ReadyState[\"Cancelled\"] = 5] = \"Cancelled\";\n\t})(exports.ReadyState || (exports.ReadyState = {}));\n\tvar ReadyState = exports.ReadyState;\n\t/**\n\t * Acceptable response types to be associated with a {@link Response}, based on\n\t * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.\n\t */\n\t(function (ResponseType) {\n\t    ResponseType[ResponseType[\"Basic\"] = 0] = \"Basic\";\n\t    ResponseType[ResponseType[\"Cors\"] = 1] = \"Cors\";\n\t    ResponseType[ResponseType[\"Default\"] = 2] = \"Default\";\n\t    ResponseType[ResponseType[\"Error\"] = 3] = \"Error\";\n\t    ResponseType[ResponseType[\"Opaque\"] = 4] = \"Opaque\";\n\t})(exports.ResponseType || (exports.ResponseType = {}));\n\tvar ResponseType = exports.ResponseType;\n\t/**\n\t * Supported content type to be automatically associated with a {@link Request}.\n\t */\n\t(function (ContentType) {\n\t    ContentType[ContentType[\"NONE\"] = 0] = \"NONE\";\n\t    ContentType[ContentType[\"JSON\"] = 1] = \"JSON\";\n\t    ContentType[ContentType[\"FORM\"] = 2] = \"FORM\";\n\t    ContentType[ContentType[\"FORM_DATA\"] = 3] = \"FORM_DATA\";\n\t    ContentType[ContentType[\"TEXT\"] = 4] = \"TEXT\";\n\t    ContentType[ContentType[\"BLOB\"] = 5] = \"BLOB\";\n\t    ContentType[ContentType[\"ARRAY_BUFFER\"] = 6] = \"ARRAY_BUFFER\";\n\t})(exports.ContentType || (exports.ContentType = {}));\n\tvar ContentType = exports.ContentType;\n\t//# sourceMappingURL=enums.js.map\n\n/***/ },\n\n/***/ 333:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar exceptions_1 = __webpack_require__(334);\n\tvar lang_1 = __webpack_require__(328);\n\tvar collection_1 = __webpack_require__(337);\n\t/**\n\t * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n\t * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n\t *\n\t * The only known difference between this `Headers` implementation and the spec is the\n\t * lack of an `entries` method.\n\t *\n\t * ### Example ([live demo](http://plnkr.co/edit/MTdwT6?p=preview))\n\t *\n\t * ```\n\t * import {Headers} from '@angular/http';\n\t *\n\t * var firstHeaders = new Headers();\n\t * firstHeaders.append('Content-Type', 'image/jpeg');\n\t * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n\t *\n\t * // Create headers from Plain Old JavaScript Object\n\t * var secondHeaders = new Headers({\n\t *   'X-My-Custom-Header': 'Angular'\n\t * });\n\t * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n\t *\n\t * var thirdHeaders = new Headers(secondHeaders);\n\t * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n\t * ```\n\t */\n\tvar Headers = (function () {\n\t    function Headers(headers) {\n\t        var _this = this;\n\t        if (headers instanceof Headers) {\n\t            this._headersMap = headers._headersMap;\n\t            return;\n\t        }\n\t        this._headersMap = new collection_1.Map();\n\t        if (lang_1.isBlank(headers)) {\n\t            return;\n\t        }\n\t        // headers instanceof StringMap\n\t        collection_1.StringMapWrapper.forEach(headers, function (v, k) {\n\t            _this._headersMap.set(k, collection_1.isListLikeIterable(v) ? v : [v]);\n\t        });\n\t    }\n\t    /**\n\t     * Returns a new Headers instance from the given DOMString of Response Headers\n\t     */\n\t    Headers.fromResponseHeaderString = function (headersString) {\n\t        return headersString.trim()\n\t            .split('\\n')\n\t            .map(function (val) { return val.split(':'); })\n\t            .map(function (_a) {\n\t            var key = _a[0], parts = _a.slice(1);\n\t            return ([key.trim(), parts.join(':').trim()]);\n\t        })\n\t            .reduce(function (headers, _a) {\n\t            var key = _a[0], value = _a[1];\n\t            return !headers.set(key, value) && headers;\n\t        }, new Headers());\n\t    };\n\t    /**\n\t     * Appends a header to existing list of header values for a given header name.\n\t     */\n\t    Headers.prototype.append = function (name, value) {\n\t        var mapName = this._headersMap.get(name);\n\t        var list = collection_1.isListLikeIterable(mapName) ? mapName : [];\n\t        list.push(value);\n\t        this._headersMap.set(name, list);\n\t    };\n\t    /**\n\t     * Deletes all header values for the given name.\n\t     */\n\t    Headers.prototype.delete = function (name) { this._headersMap.delete(name); };\n\t    Headers.prototype.forEach = function (fn) {\n\t        this._headersMap.forEach(fn);\n\t    };\n\t    /**\n\t     * Returns first header that matches given name.\n\t     */\n\t    Headers.prototype.get = function (header) { return collection_1.ListWrapper.first(this._headersMap.get(header)); };\n\t    /**\n\t     * Check for existence of header by given name.\n\t     */\n\t    Headers.prototype.has = function (header) { return this._headersMap.has(header); };\n\t    /**\n\t     * Provides names of set headers\n\t     */\n\t    Headers.prototype.keys = function () { return collection_1.MapWrapper.keys(this._headersMap); };\n\t    /**\n\t     * Sets or overrides header value for given name.\n\t     */\n\t    Headers.prototype.set = function (header, value) {\n\t        var list = [];\n\t        if (collection_1.isListLikeIterable(value)) {\n\t            var pushValue = value.join(',');\n\t            list.push(pushValue);\n\t        }\n\t        else {\n\t            list.push(value);\n\t        }\n\t        this._headersMap.set(header, list);\n\t    };\n\t    /**\n\t     * Returns values of all headers.\n\t     */\n\t    Headers.prototype.values = function () { return collection_1.MapWrapper.values(this._headersMap); };\n\t    /**\n\t     * Returns string of all headers.\n\t     */\n\t    Headers.prototype.toJSON = function () {\n\t        var serializableHeaders = {};\n\t        this._headersMap.forEach(function (values, name) {\n\t            var list = [];\n\t            collection_1.iterateListLike(values, function (val /** TODO #9100 */) { return list = collection_1.ListWrapper.concat(list, val.split(',')); });\n\t            serializableHeaders[name] = list;\n\t        });\n\t        return serializableHeaders;\n\t    };\n\t    /**\n\t     * Returns list of header values for a given name.\n\t     */\n\t    Headers.prototype.getAll = function (header) {\n\t        var headers = this._headersMap.get(header);\n\t        return collection_1.isListLikeIterable(headers) ? headers : [];\n\t    };\n\t    /**\n\t     * This method is not implemented.\n\t     */\n\t    Headers.prototype.entries = function () { throw new exceptions_1.BaseException('\"entries\" method is not implemented on Headers class'); };\n\t    return Headers;\n\t}());\n\texports.Headers = Headers;\n\t//# sourceMappingURL=headers.js.map\n\n/***/ },\n\n/***/ 334:\n[663, 335, 336, 336],\n\n/***/ 335:\n21,\n\n/***/ 336:\n[664, 335, 337, 328],\n\n/***/ 337:\n[665, 328],\n\n/***/ 338:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * Abstract class from which real backends are derived.\n\t *\n\t * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n\t * {@link Request}.\n\t */\n\tvar ConnectionBackend = (function () {\n\t    function ConnectionBackend() {\n\t    }\n\t    return ConnectionBackend;\n\t}());\n\texports.ConnectionBackend = ConnectionBackend;\n\t/**\n\t * Abstract class from which real connections are derived.\n\t */\n\tvar Connection = (function () {\n\t    function Connection() {\n\t    }\n\t    return Connection;\n\t}());\n\texports.Connection = Connection;\n\t/** An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request. */\n\tvar XSRFStrategy = (function () {\n\t    function XSRFStrategy() {\n\t    }\n\t    return XSRFStrategy;\n\t}());\n\texports.XSRFStrategy = XSRFStrategy;\n\t//# sourceMappingURL=interfaces.js.map\n\n/***/ },\n\n/***/ 339:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar exceptions_1 = __webpack_require__(334);\n\tvar lang_1 = __webpack_require__(328);\n\tvar http_utils_1 = __webpack_require__(340);\n\t/**\n\t * Creates `Response` instances from provided values.\n\t *\n\t * Though this object isn't\n\t * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n\t * add data to a view.\n\t *\n\t * ### Example\n\t *\n\t * ```\n\t * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n\t * ```\n\t *\n\t * The Response's interface is inspired by the Response constructor defined in the [Fetch\n\t * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n\t * can be accessed many times. There are other differences in the implementation, but this is the\n\t * most significant.\n\t */\n\tvar Response = (function () {\n\t    function Response(responseOptions) {\n\t        this._body = responseOptions.body;\n\t        this.status = responseOptions.status;\n\t        this.ok = (this.status >= 200 && this.status <= 299);\n\t        this.statusText = responseOptions.statusText;\n\t        this.headers = responseOptions.headers;\n\t        this.type = responseOptions.type;\n\t        this.url = responseOptions.url;\n\t    }\n\t    /**\n\t     * Not yet implemented\n\t     */\n\t    // TODO: Blob return type\n\t    Response.prototype.blob = function () { throw new exceptions_1.BaseException('\"blob()\" method not implemented on Response superclass'); };\n\t    /**\n\t     * Attempts to return body as parsed `JSON` object, or raises an exception.\n\t     */\n\t    Response.prototype.json = function () {\n\t        var jsonResponse;\n\t        if (http_utils_1.isJsObject(this._body)) {\n\t            jsonResponse = this._body;\n\t        }\n\t        else if (lang_1.isString(this._body)) {\n\t            jsonResponse = lang_1.Json.parse(this._body);\n\t        }\n\t        return jsonResponse;\n\t    };\n\t    /**\n\t     * Returns the body as a string, presuming `toString()` can be called on the response body.\n\t     */\n\t    Response.prototype.text = function () { return this._body.toString(); };\n\t    /**\n\t     * Not yet implemented\n\t     */\n\t    // TODO: ArrayBuffer return type\n\t    Response.prototype.arrayBuffer = function () {\n\t        throw new exceptions_1.BaseException('\"arrayBuffer()\" method not implemented on Response superclass');\n\t    };\n\t    Response.prototype.toString = function () {\n\t        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n\t    };\n\t    return Response;\n\t}());\n\texports.Response = Response;\n\t//# sourceMappingURL=static_response.js.map\n\n/***/ },\n\n/***/ 340:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar exceptions_1 = __webpack_require__(334);\n\tvar lang_1 = __webpack_require__(328);\n\tvar enums_1 = __webpack_require__(332);\n\tfunction normalizeMethodName(method) {\n\t    if (lang_1.isString(method)) {\n\t        var originalMethod = method;\n\t        method = method\n\t            .replace(/(\\w)(\\w*)/g, function (g0, g1, g2) { return g1.toUpperCase() + g2.toLowerCase(); });\n\t        method = enums_1.RequestMethod[method];\n\t        if (typeof method !== 'number')\n\t            throw exceptions_1.makeTypeError(\"Invalid request method. The method \\\"\" + originalMethod + \"\\\" is not supported.\");\n\t    }\n\t    return method;\n\t}\n\texports.normalizeMethodName = normalizeMethodName;\n\texports.isSuccess = function (status) { return (status >= 200 && status < 300); };\n\tfunction getResponseURL(xhr) {\n\t    if ('responseURL' in xhr) {\n\t        return xhr.responseURL;\n\t    }\n\t    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t        return xhr.getResponseHeader('X-Request-URL');\n\t    }\n\t    return;\n\t}\n\texports.getResponseURL = getResponseURL;\n\tvar lang_2 = __webpack_require__(328);\n\texports.isJsObject = lang_2.isJsObject;\n\t//# sourceMappingURL=http_utils.js.map\n\n/***/ },\n\n/***/ 341:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar core_1 = __webpack_require__(5);\n\tvar platform_browser_1 = __webpack_require__(256);\n\tvar Observable_1 = __webpack_require__(38);\n\tvar base_response_options_1 = __webpack_require__(331);\n\tvar enums_1 = __webpack_require__(332);\n\tvar lang_1 = __webpack_require__(328);\n\tvar headers_1 = __webpack_require__(333);\n\tvar http_utils_1 = __webpack_require__(340);\n\tvar interfaces_1 = __webpack_require__(338);\n\tvar static_response_1 = __webpack_require__(339);\n\tvar browser_xhr_1 = __webpack_require__(329);\n\tvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n\t/**\n\t * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n\t * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n\t * request.\n\t *\n\t * This class would typically not be created or interacted with directly inside applications, though\n\t * the {@link MockConnection} may be interacted with in tests.\n\t */\n\tvar XHRConnection = (function () {\n\t    function XHRConnection(req, browserXHR, baseResponseOptions) {\n\t        var _this = this;\n\t        this.request = req;\n\t        this.response = new Observable_1.Observable(function (responseObserver) {\n\t            var _xhr = browserXHR.build();\n\t            _xhr.open(enums_1.RequestMethod[req.method].toUpperCase(), req.url);\n\t            if (lang_1.isPresent(req.withCredentials)) {\n\t                _xhr.withCredentials = req.withCredentials;\n\t            }\n\t            // load event handler\n\t            var onLoad = function () {\n\t                // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n\t                // response/responseType properties were introduced in XHR Level2 spec (supported by\n\t                // IE10)\n\t                var body = lang_1.isPresent(_xhr.response) ? _xhr.response : _xhr.responseText;\n\t                // Implicitly strip a potential XSSI prefix.\n\t                if (lang_1.isString(body))\n\t                    body = body.replace(XSSI_PREFIX, '');\n\t                var headers = headers_1.Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n\t                var url = http_utils_1.getResponseURL(_xhr);\n\t                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n\t                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n\t                // fix status code when it is 0 (0 status is undocumented).\n\t                // Occurs when accessing file resources or on Android 4.1 stock browser\n\t                // while retrieving files from application cache.\n\t                if (status === 0) {\n\t                    status = body ? 200 : 0;\n\t                }\n\t                var statusText = _xhr.statusText || 'OK';\n\t                var responseOptions = new base_response_options_1.ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n\t                if (lang_1.isPresent(baseResponseOptions)) {\n\t                    responseOptions = baseResponseOptions.merge(responseOptions);\n\t                }\n\t                var response = new static_response_1.Response(responseOptions);\n\t                response.ok = http_utils_1.isSuccess(status);\n\t                if (response.ok) {\n\t                    responseObserver.next(response);\n\t                    // TODO(gdi2290): defer complete if array buffer until done\n\t                    responseObserver.complete();\n\t                    return;\n\t                }\n\t                responseObserver.error(response);\n\t            };\n\t            // error event handler\n\t            var onError = function (err) {\n\t                var responseOptions = new base_response_options_1.ResponseOptions({\n\t                    body: err,\n\t                    type: enums_1.ResponseType.Error,\n\t                    status: _xhr.status,\n\t                    statusText: _xhr.statusText,\n\t                });\n\t                if (lang_1.isPresent(baseResponseOptions)) {\n\t                    responseOptions = baseResponseOptions.merge(responseOptions);\n\t                }\n\t                responseObserver.error(new static_response_1.Response(responseOptions));\n\t            };\n\t            _this.setDetectedContentType(req, _xhr);\n\t            if (lang_1.isPresent(req.headers)) {\n\t                req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\n\t            }\n\t            _xhr.addEventListener('load', onLoad);\n\t            _xhr.addEventListener('error', onError);\n\t            _xhr.send(_this.request.getBody());\n\t            return function () {\n\t                _xhr.removeEventListener('load', onLoad);\n\t                _xhr.removeEventListener('error', onError);\n\t                _xhr.abort();\n\t            };\n\t        });\n\t    }\n\t    XHRConnection.prototype.setDetectedContentType = function (req /** TODO #9100 */, _xhr /** TODO #9100 */) {\n\t        // Skip if a custom Content-Type header is provided\n\t        if (lang_1.isPresent(req.headers) && lang_1.isPresent(req.headers.get('Content-Type'))) {\n\t            return;\n\t        }\n\t        // Set the detected content type\n\t        switch (req.contentType) {\n\t            case enums_1.ContentType.NONE:\n\t                break;\n\t            case enums_1.ContentType.JSON:\n\t                _xhr.setRequestHeader('Content-Type', 'application/json');\n\t                break;\n\t            case enums_1.ContentType.FORM:\n\t                _xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded;charset=UTF-8');\n\t                break;\n\t            case enums_1.ContentType.TEXT:\n\t                _xhr.setRequestHeader('Content-Type', 'text/plain');\n\t                break;\n\t            case enums_1.ContentType.BLOB:\n\t                var blob = req.blob();\n\t                if (blob.type) {\n\t                    _xhr.setRequestHeader('Content-Type', blob.type);\n\t                }\n\t                break;\n\t        }\n\t    };\n\t    return XHRConnection;\n\t}());\n\texports.XHRConnection = XHRConnection;\n\t/**\n\t * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n\t * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF) for more\n\t * information on XSRF.\n\t *\n\t * Applications can configure custom cookie and header names by binding an instance of this class\n\t * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n\t * details.\n\t */\n\tvar CookieXSRFStrategy = (function () {\n\t    function CookieXSRFStrategy(_cookieName, _headerName) {\n\t        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n\t        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n\t        this._cookieName = _cookieName;\n\t        this._headerName = _headerName;\n\t    }\n\t    CookieXSRFStrategy.prototype.configureRequest = function (req) {\n\t        var xsrfToken = platform_browser_1.__platform_browser_private__.getDOM().getCookie(this._cookieName);\n\t        if (xsrfToken && !req.headers.has(this._headerName)) {\n\t            req.headers.set(this._headerName, xsrfToken);\n\t        }\n\t    };\n\t    return CookieXSRFStrategy;\n\t}());\n\texports.CookieXSRFStrategy = CookieXSRFStrategy;\n\tvar XHRBackend = (function () {\n\t    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n\t        this._browserXHR = _browserXHR;\n\t        this._baseResponseOptions = _baseResponseOptions;\n\t        this._xsrfStrategy = _xsrfStrategy;\n\t    }\n\t    XHRBackend.prototype.createConnection = function (request) {\n\t        this._xsrfStrategy.configureRequest(request);\n\t        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n\t    };\n\t    /** @nocollapse */\n\t    XHRBackend.decorators = [\n\t        { type: core_1.Injectable },\n\t    ];\n\t    /** @nocollapse */\n\t    XHRBackend.ctorParameters = [\n\t        { type: browser_xhr_1.BrowserXhr, },\n\t        { type: base_response_options_1.ResponseOptions, },\n\t        { type: interfaces_1.XSRFStrategy, },\n\t    ];\n\t    return XHRBackend;\n\t}());\n\texports.XHRBackend = XHRBackend;\n\t//# sourceMappingURL=xhr_backend.js.map\n\n/***/ },\n\n/***/ 342:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar lang_1 = __webpack_require__(328);\n\tvar enums_1 = __webpack_require__(332);\n\tvar headers_1 = __webpack_require__(333);\n\tvar http_utils_1 = __webpack_require__(340);\n\tvar url_search_params_1 = __webpack_require__(343);\n\t/**\n\t * Creates a request options object to be optionally provided when instantiating a\n\t * {@link Request}.\n\t *\n\t * This class is based on the `RequestInit` description in the [Fetch\n\t * Spec](https://fetch.spec.whatwg.org/#requestinit).\n\t *\n\t * All values are null by default. Typical defaults can be found in the {@link BaseRequestOptions}\n\t * class, which sub-classes `RequestOptions`.\n\t *\n\t * ### Example ([live demo](http://plnkr.co/edit/7Wvi3lfLq41aQPKlxB4O?p=preview))\n\t *\n\t * ```typescript\n\t * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n\t *\n\t * var options = new RequestOptions({\n\t *   method: RequestMethod.Post,\n\t *   url: 'https://google.com'\n\t * });\n\t * var req = new Request(options);\n\t * console.log('req.method:', RequestMethod[req.method]); // Post\n\t * console.log('options.url:', options.url); // https://google.com\n\t * ```\n\t */\n\tvar RequestOptions = (function () {\n\t    function RequestOptions(_a) {\n\t        var _b = _a === void 0 ? {} : _a, method = _b.method, headers = _b.headers, body = _b.body, url = _b.url, search = _b.search, withCredentials = _b.withCredentials;\n\t        this.method = lang_1.isPresent(method) ? http_utils_1.normalizeMethodName(method) : null;\n\t        this.headers = lang_1.isPresent(headers) ? headers : null;\n\t        this.body = lang_1.isPresent(body) ? body : null;\n\t        this.url = lang_1.isPresent(url) ? url : null;\n\t        this.search = lang_1.isPresent(search) ?\n\t            (lang_1.isString(search) ? new url_search_params_1.URLSearchParams((search)) : (search)) :\n\t            null;\n\t        this.withCredentials = lang_1.isPresent(withCredentials) ? withCredentials : null;\n\t    }\n\t    /**\n\t     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n\t     * existing values. This method will not change the values of the instance on which it is being\n\t     * called.\n\t     *\n\t     * Note that `headers` and `search` will override existing values completely if present in\n\t     * the `options` object. If these values should be merged, it should be done prior to calling\n\t     * `merge` on the `RequestOptions` instance.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/6w8XA8YTkDRcPYpdB9dk?p=preview))\n\t     *\n\t     * ```typescript\n\t     * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n\t     *\n\t     * var options = new RequestOptions({\n\t     *   method: RequestMethod.Post\n\t     * });\n\t     * var req = new Request(options.merge({\n\t     *   url: 'https://google.com'\n\t     * }));\n\t     * console.log('req.method:', RequestMethod[req.method]); // Post\n\t     * console.log('options.url:', options.url); // null\n\t     * console.log('req.url:', req.url); // https://google.com\n\t     * ```\n\t     */\n\t    RequestOptions.prototype.merge = function (options) {\n\t        return new RequestOptions({\n\t            method: lang_1.isPresent(options) && lang_1.isPresent(options.method) ? options.method : this.method,\n\t            headers: lang_1.isPresent(options) && lang_1.isPresent(options.headers) ? options.headers : this.headers,\n\t            body: lang_1.isPresent(options) && lang_1.isPresent(options.body) ? options.body : this.body,\n\t            url: lang_1.isPresent(options) && lang_1.isPresent(options.url) ? options.url : this.url,\n\t            search: lang_1.isPresent(options) && lang_1.isPresent(options.search) ?\n\t                (lang_1.isString(options.search) ? new url_search_params_1.URLSearchParams((options.search)) :\n\t                    (options.search).clone()) :\n\t                this.search,\n\t            withCredentials: lang_1.isPresent(options) && lang_1.isPresent(options.withCredentials) ?\n\t                options.withCredentials :\n\t                this.withCredentials\n\t        });\n\t    };\n\t    return RequestOptions;\n\t}());\n\texports.RequestOptions = RequestOptions;\n\tvar BaseRequestOptions = (function (_super) {\n\t    __extends(BaseRequestOptions, _super);\n\t    function BaseRequestOptions() {\n\t        _super.call(this, { method: enums_1.RequestMethod.Get, headers: new headers_1.Headers() });\n\t    }\n\t    /** @nocollapse */\n\t    BaseRequestOptions.decorators = [\n\t        { type: core_1.Injectable },\n\t    ];\n\t    /** @nocollapse */\n\t    BaseRequestOptions.ctorParameters = [];\n\t    return BaseRequestOptions;\n\t}(RequestOptions));\n\texports.BaseRequestOptions = BaseRequestOptions;\n\t//# sourceMappingURL=base_request_options.js.map\n\n/***/ },\n\n/***/ 343:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar collection_1 = __webpack_require__(337);\n\tvar lang_1 = __webpack_require__(328);\n\tfunction paramParser(rawParams) {\n\t    if (rawParams === void 0) { rawParams = ''; }\n\t    var map = new collection_1.Map();\n\t    if (rawParams.length > 0) {\n\t        var params = rawParams.split('&');\n\t        params.forEach(function (param) {\n\t            var split = param.split('=');\n\t            var key = split[0];\n\t            var val = split[1];\n\t            var list = lang_1.isPresent(map.get(key)) ? map.get(key) : [];\n\t            list.push(val);\n\t            map.set(key, list);\n\t        });\n\t    }\n\t    return map;\n\t}\n\t/**\n\t * Map-like representation of url search parameters, based on\n\t * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n\t * with several extensions for merging URLSearchParams objects:\n\t *   - setAll()\n\t *   - appendAll()\n\t *   - replaceAll()\n\t */\n\tvar URLSearchParams = (function () {\n\t    function URLSearchParams(rawParams) {\n\t        if (rawParams === void 0) { rawParams = ''; }\n\t        this.rawParams = rawParams;\n\t        this.paramsMap = paramParser(rawParams);\n\t    }\n\t    URLSearchParams.prototype.clone = function () {\n\t        var clone = new URLSearchParams();\n\t        clone.appendAll(this);\n\t        return clone;\n\t    };\n\t    URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n\t    URLSearchParams.prototype.get = function (param) {\n\t        var storedParam = this.paramsMap.get(param);\n\t        if (collection_1.isListLikeIterable(storedParam)) {\n\t            return collection_1.ListWrapper.first(storedParam);\n\t        }\n\t        else {\n\t            return null;\n\t        }\n\t    };\n\t    URLSearchParams.prototype.getAll = function (param) {\n\t        var mapParam = this.paramsMap.get(param);\n\t        return lang_1.isPresent(mapParam) ? mapParam : [];\n\t    };\n\t    URLSearchParams.prototype.set = function (param, val) {\n\t        var mapParam = this.paramsMap.get(param);\n\t        var list = lang_1.isPresent(mapParam) ? mapParam : [];\n\t        collection_1.ListWrapper.clear(list);\n\t        list.push(val);\n\t        this.paramsMap.set(param, list);\n\t    };\n\t    // A merge operation\n\t    // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n\t    //\n\t    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n\t    //\n\t    // TODO(@caitp): document this better\n\t    URLSearchParams.prototype.setAll = function (searchParams) {\n\t        var _this = this;\n\t        searchParams.paramsMap.forEach(function (value, param) {\n\t            var mapParam = _this.paramsMap.get(param);\n\t            var list = lang_1.isPresent(mapParam) ? mapParam : [];\n\t            collection_1.ListWrapper.clear(list);\n\t            list.push(value[0]);\n\t            _this.paramsMap.set(param, list);\n\t        });\n\t    };\n\t    URLSearchParams.prototype.append = function (param, val) {\n\t        var mapParam = this.paramsMap.get(param);\n\t        var list = lang_1.isPresent(mapParam) ? mapParam : [];\n\t        list.push(val);\n\t        this.paramsMap.set(param, list);\n\t    };\n\t    // A merge operation\n\t    // For each name-values pair in `searchParams`, perform `append(name, value)`\n\t    // for each value in `values`.\n\t    //\n\t    // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n\t    //\n\t    // TODO(@caitp): document this better\n\t    URLSearchParams.prototype.appendAll = function (searchParams) {\n\t        var _this = this;\n\t        searchParams.paramsMap.forEach(function (value, param) {\n\t            var mapParam = _this.paramsMap.get(param);\n\t            var list = lang_1.isPresent(mapParam) ? mapParam : [];\n\t            for (var i = 0; i < value.length; ++i) {\n\t                list.push(value[i]);\n\t            }\n\t            _this.paramsMap.set(param, list);\n\t        });\n\t    };\n\t    // A merge operation\n\t    // For each name-values pair in `searchParams`, perform `delete(name)`,\n\t    // followed by `set(name, values)`\n\t    //\n\t    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n\t    //\n\t    // TODO(@caitp): document this better\n\t    URLSearchParams.prototype.replaceAll = function (searchParams) {\n\t        var _this = this;\n\t        searchParams.paramsMap.forEach(function (value, param) {\n\t            var mapParam = _this.paramsMap.get(param);\n\t            var list = lang_1.isPresent(mapParam) ? mapParam : [];\n\t            collection_1.ListWrapper.clear(list);\n\t            for (var i = 0; i < value.length; ++i) {\n\t                list.push(value[i]);\n\t            }\n\t            _this.paramsMap.set(param, list);\n\t        });\n\t    };\n\t    URLSearchParams.prototype.toString = function () {\n\t        var paramsList = [];\n\t        this.paramsMap.forEach(function (values, k) { values.forEach(function (v) { return paramsList.push(k + '=' + encodeURIComponent(v)); }); });\n\t        return paramsList.join('&');\n\t    };\n\t    URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n\t    return URLSearchParams;\n\t}());\n\texports.URLSearchParams = URLSearchParams;\n\t//# sourceMappingURL=url_search_params.js.map\n\n/***/ },\n\n/***/ 344:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar exceptions_1 = __webpack_require__(334);\n\tvar lang_1 = __webpack_require__(328);\n\tvar base_request_options_1 = __webpack_require__(342);\n\tvar enums_1 = __webpack_require__(332);\n\tvar interfaces_1 = __webpack_require__(338);\n\tvar static_request_1 = __webpack_require__(345);\n\tfunction httpRequest(backend, request) {\n\t    return backend.createConnection(request).response;\n\t}\n\tfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n\t    var newOptions = defaultOpts;\n\t    if (lang_1.isPresent(providedOpts)) {\n\t        // Hack so Dart can used named parameters\n\t        return newOptions.merge(new base_request_options_1.RequestOptions({\n\t            method: providedOpts.method || method,\n\t            url: providedOpts.url || url,\n\t            search: providedOpts.search,\n\t            headers: providedOpts.headers,\n\t            body: providedOpts.body,\n\t            withCredentials: providedOpts.withCredentials\n\t        }));\n\t    }\n\t    if (lang_1.isPresent(method)) {\n\t        return newOptions.merge(new base_request_options_1.RequestOptions({ method: method, url: url }));\n\t    }\n\t    else {\n\t        return newOptions.merge(new base_request_options_1.RequestOptions({ url: url }));\n\t    }\n\t}\n\tvar Http = (function () {\n\t    function Http(_backend, _defaultOptions) {\n\t        this._backend = _backend;\n\t        this._defaultOptions = _defaultOptions;\n\t    }\n\t    /**\n\t     * Performs any type of http request. First argument is required, and can either be a url or\n\t     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n\t     * object can be provided as the 2nd argument. The options object will be merged with the values\n\t     * of {@link BaseRequestOptions} before performing the request.\n\t     */\n\t    Http.prototype.request = function (url, options) {\n\t        var responseObservable;\n\t        if (lang_1.isString(url)) {\n\t            responseObservable = httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Get, url)));\n\t        }\n\t        else if (url instanceof static_request_1.Request) {\n\t            responseObservable = httpRequest(this._backend, url);\n\t        }\n\t        else {\n\t            throw exceptions_1.makeTypeError('First argument must be a url string or Request instance.');\n\t        }\n\t        return responseObservable;\n\t    };\n\t    /**\n\t     * Performs a request with `get` http method.\n\t     */\n\t    Http.prototype.get = function (url, options) {\n\t        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Get, url)));\n\t    };\n\t    /**\n\t     * Performs a request with `post` http method.\n\t     */\n\t    Http.prototype.post = function (url, body, options) {\n\t        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions.merge(new base_request_options_1.RequestOptions({ body: body })), options, enums_1.RequestMethod.Post, url)));\n\t    };\n\t    /**\n\t     * Performs a request with `put` http method.\n\t     */\n\t    Http.prototype.put = function (url, body, options) {\n\t        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions.merge(new base_request_options_1.RequestOptions({ body: body })), options, enums_1.RequestMethod.Put, url)));\n\t    };\n\t    /**\n\t     * Performs a request with `delete` http method.\n\t     */\n\t    Http.prototype.delete = function (url, options) {\n\t        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Delete, url)));\n\t    };\n\t    /**\n\t     * Performs a request with `patch` http method.\n\t     */\n\t    Http.prototype.patch = function (url, body, options) {\n\t        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions.merge(new base_request_options_1.RequestOptions({ body: body })), options, enums_1.RequestMethod.Patch, url)));\n\t    };\n\t    /**\n\t     * Performs a request with `head` http method.\n\t     */\n\t    Http.prototype.head = function (url, options) {\n\t        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Head, url)));\n\t    };\n\t    /** @nocollapse */\n\t    Http.decorators = [\n\t        { type: core_1.Injectable },\n\t    ];\n\t    /** @nocollapse */\n\t    Http.ctorParameters = [\n\t        { type: interfaces_1.ConnectionBackend, },\n\t        { type: base_request_options_1.RequestOptions, },\n\t    ];\n\t    return Http;\n\t}());\n\texports.Http = Http;\n\tvar Jsonp = (function (_super) {\n\t    __extends(Jsonp, _super);\n\t    function Jsonp(backend, defaultOptions) {\n\t        _super.call(this, backend, defaultOptions);\n\t    }\n\t    /**\n\t     * Performs any type of http request. First argument is required, and can either be a url or\n\t     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n\t     * object can be provided as the 2nd argument. The options object will be merged with the values\n\t     * of {@link BaseRequestOptions} before performing the request.\n\t     */\n\t    Jsonp.prototype.request = function (url, options) {\n\t        var responseObservable;\n\t        if (lang_1.isString(url)) {\n\t            url =\n\t                new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Get, url));\n\t        }\n\t        if (url instanceof static_request_1.Request) {\n\t            if (url.method !== enums_1.RequestMethod.Get) {\n\t                exceptions_1.makeTypeError('JSONP requests must use GET request method.');\n\t            }\n\t            responseObservable = httpRequest(this._backend, url);\n\t        }\n\t        else {\n\t            throw exceptions_1.makeTypeError('First argument must be a url string or Request instance.');\n\t        }\n\t        return responseObservable;\n\t    };\n\t    /** @nocollapse */\n\t    Jsonp.decorators = [\n\t        { type: core_1.Injectable },\n\t    ];\n\t    /** @nocollapse */\n\t    Jsonp.ctorParameters = [\n\t        { type: interfaces_1.ConnectionBackend, },\n\t        { type: base_request_options_1.RequestOptions, },\n\t    ];\n\t    return Jsonp;\n\t}(Http));\n\texports.Jsonp = Jsonp;\n\t//# sourceMappingURL=http.js.map\n\n/***/ },\n\n/***/ 345:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar lang_1 = __webpack_require__(328);\n\tvar enums_1 = __webpack_require__(332);\n\tvar headers_1 = __webpack_require__(333);\n\tvar http_utils_1 = __webpack_require__(340);\n\tvar url_search_params_1 = __webpack_require__(343);\n\t// TODO(jeffbcross): properly implement body accessors\n\t/**\n\t * Creates `Request` instances from provided values.\n\t *\n\t * The Request's interface is inspired by the Request constructor defined in the [Fetch\n\t * Spec](https://fetch.spec.whatwg.org/#request-class),\n\t * but is considered a static value whose body can be accessed many times. There are other\n\t * differences in the implementation, but this is the most significant.\n\t *\n\t * `Request` instances are typically created by higher-level classes, like {@link Http} and\n\t * {@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n\t * One such example is when creating services that wrap higher-level services, like {@link Http},\n\t * where it may be useful to generate a `Request` with arbitrary headers and search params.\n\t *\n\t * ```typescript\n\t * import {Injectable, Injector} from '@angular/core';\n\t * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '@angular/http';\n\t *\n\t * @Injectable()\n\t * class AutoAuthenticator {\n\t *   constructor(public http:Http) {}\n\t *   request(url:string) {\n\t *     return this.http.request(new Request({\n\t *       method: RequestMethod.Get,\n\t *       url: url,\n\t *       search: 'password=123'\n\t *     }));\n\t *   }\n\t * }\n\t *\n\t * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n\t * var authenticator = injector.get(AutoAuthenticator);\n\t * authenticator.request('people.json').subscribe(res => {\n\t *   //URL should have included '?password=123'\n\t *   console.log('people', res.json());\n\t * });\n\t * ```\n\t */\n\tvar Request = (function () {\n\t    function Request(requestOptions) {\n\t        // TODO: assert that url is present\n\t        var url = requestOptions.url;\n\t        this.url = requestOptions.url;\n\t        if (lang_1.isPresent(requestOptions.search)) {\n\t            var search = requestOptions.search.toString();\n\t            if (search.length > 0) {\n\t                var prefix = '?';\n\t                if (lang_1.StringWrapper.contains(this.url, '?')) {\n\t                    prefix = (this.url[this.url.length - 1] == '&') ? '' : '&';\n\t                }\n\t                // TODO: just delete search-query-looking string in url?\n\t                this.url = url + prefix + search;\n\t            }\n\t        }\n\t        this._body = requestOptions.body;\n\t        this.contentType = this.detectContentType();\n\t        this.method = http_utils_1.normalizeMethodName(requestOptions.method);\n\t        // TODO(jeffbcross): implement behavior\n\t        // Defaults to 'omit', consistent with browser\n\t        // TODO(jeffbcross): implement behavior\n\t        this.headers = new headers_1.Headers(requestOptions.headers);\n\t        this.withCredentials = requestOptions.withCredentials;\n\t    }\n\t    /**\n\t     * Returns the request's body as string, assuming that body exists. If body is undefined, return\n\t     * empty\n\t     * string.\n\t     */\n\t    Request.prototype.text = function () { return lang_1.isPresent(this._body) ? this._body.toString() : ''; };\n\t    /**\n\t     * Returns the request's body as JSON string, assuming that body exists. If body is undefined,\n\t     * return\n\t     * empty\n\t     * string.\n\t     */\n\t    Request.prototype.json = function () { return lang_1.isPresent(this._body) ? JSON.stringify(this._body) : ''; };\n\t    /**\n\t     * Returns the request's body as array buffer, assuming that body exists. If body is undefined,\n\t     * return\n\t     * null.\n\t     */\n\t    Request.prototype.arrayBuffer = function () {\n\t        if (this._body instanceof ArrayBuffer)\n\t            return this._body;\n\t        throw 'The request body isn\\'t an array buffer';\n\t    };\n\t    /**\n\t     * Returns the request's body as blob, assuming that body exists. If body is undefined, return\n\t     * null.\n\t     */\n\t    Request.prototype.blob = function () {\n\t        if (this._body instanceof Blob)\n\t            return this._body;\n\t        if (this._body instanceof ArrayBuffer)\n\t            return new Blob([this._body]);\n\t        throw 'The request body isn\\'t either a blob or an array buffer';\n\t    };\n\t    /**\n\t     * Returns the content type of request's body based on its type.\n\t     */\n\t    Request.prototype.detectContentType = function () {\n\t        if (this._body == null) {\n\t            return enums_1.ContentType.NONE;\n\t        }\n\t        else if (this._body instanceof url_search_params_1.URLSearchParams) {\n\t            return enums_1.ContentType.FORM;\n\t        }\n\t        else if (this._body instanceof FormData) {\n\t            return enums_1.ContentType.FORM_DATA;\n\t        }\n\t        else if (this._body instanceof Blob) {\n\t            return enums_1.ContentType.BLOB;\n\t        }\n\t        else if (this._body instanceof ArrayBuffer) {\n\t            return enums_1.ContentType.ARRAY_BUFFER;\n\t        }\n\t        else if (this._body && typeof this._body == 'object') {\n\t            return enums_1.ContentType.JSON;\n\t        }\n\t        else {\n\t            return enums_1.ContentType.TEXT;\n\t        }\n\t    };\n\t    /**\n\t     * Returns the request's body according to its type. If body is undefined, return\n\t     * null.\n\t     */\n\t    Request.prototype.getBody = function () {\n\t        switch (this.contentType) {\n\t            case enums_1.ContentType.JSON:\n\t                return this.json();\n\t            case enums_1.ContentType.FORM:\n\t                return this.text();\n\t            case enums_1.ContentType.FORM_DATA:\n\t                return this._body;\n\t            case enums_1.ContentType.TEXT:\n\t                return this.text();\n\t            case enums_1.ContentType.BLOB:\n\t                return this.blob();\n\t            case enums_1.ContentType.ARRAY_BUFFER:\n\t                return this.arrayBuffer();\n\t            default:\n\t                return null;\n\t        }\n\t    };\n\t    return Request;\n\t}());\n\texports.Request = Request;\n\tvar noop = function () { };\n\tvar w = typeof window == 'object' ? window : noop;\n\tvar FormData = w['FormData'] || noop;\n\tvar Blob = w['Blob'] || noop;\n\tvar ArrayBuffer = w['ArrayBuffer'] || noop;\n\t//# sourceMappingURL=static_request.js.map\n\n/***/ },\n\n/***/ 346:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(5);\r\n\tvar navigation_box_component_1 = __webpack_require__(347);\r\n\tvar top_menu_component_1 = __webpack_require__(357);\r\n\tvar AppComponent = (function () {\r\n\t    function AppComponent() {\r\n\t    }\r\n\t    AppComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'body',\r\n\t            templateUrl: ('https://leilap.github.io/DemoWebsiteNg2/src/app/app.component.html'),\r\n\t            directives: [top_menu_component_1.TopMenuComponent, navigation_box_component_1.NavigationBoxComponent]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], AppComponent);\r\n\t    return AppComponent;\r\n\t}());\r\n\texports.AppComponent = AppComponent;\r\n\n\n/***/ },\n\n/***/ 347:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(5);\r\n\tvar navigation_box_service_1 = __webpack_require__(348);\r\n\tvar NavigationBoxComponent = (function () {\r\n\t    function NavigationBoxComponent(navigationBoxService) {\r\n\t        this.navigationBoxService = navigationBoxService;\r\n\t    }\r\n\t    NavigationBoxComponent.prototype.getNavigationBoxes = function () {\r\n\t        var _this = this;\r\n\t        this.navigationBoxService.getNavigationBoxes()\r\n\t            .subscribe(function (response) { return _this.navigationBoxes = response; }, function (error) { return _this.errorMessage = error; });\r\n\t    };\r\n\t    ;\r\n\t    NavigationBoxComponent.prototype.isCollapsed = function (navBox) {\r\n\t        return navBox.isHidden;\r\n\t    };\r\n\t    ;\r\n\t    NavigationBoxComponent.prototype.isHovered = function (navBox) {\r\n\t        return navBox.isHovered;\r\n\t    };\r\n\t    ;\r\n\t    NavigationBoxComponent.prototype.mouseEventFunc = function (navBox) {\r\n\t        navBox.isHovered = !navBox.isHovered;\r\n\t        return navBox.isHovered;\r\n\t    };\r\n\t    ;\r\n\t    NavigationBoxComponent.prototype.ngOnInit = function () {\r\n\t        this.getNavigationBoxes();\r\n\t    };\r\n\t    ;\r\n\t    NavigationBoxComponent.prototype.toggle = function (navBox, repeaterIndex) {\r\n\t        navBox.isHidden = !navBox.isHidden;\r\n\t        this.navigationBoxes.forEach(function (item, i) {\r\n\t            if (repeaterIndex != i) {\r\n\t                item.isHidden = true;\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    ;\r\n\t    NavigationBoxComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: '<navigation-boxes>',\r\n\t            templateUrl: 'https://leilap.github.io/DemoWebsiteNg2/src/app/navigation-boxes/navigation-box.component.html',\r\n\t            providers: [navigation_box_service_1.NavigationBoxService]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [navigation_box_service_1.NavigationBoxService])\r\n\t    ], NavigationBoxComponent);\r\n\t    return NavigationBoxComponent;\r\n\t}());\r\n\texports.NavigationBoxComponent = NavigationBoxComponent;\r\n\n\n/***/ },\n\n/***/ 348:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(5);\r\n\tvar http_1 = __webpack_require__(325);\r\n\t__webpack_require__(349);\r\n\t__webpack_require__(352);\r\n\t__webpack_require__(354);\r\n\tvar Observable_1 = __webpack_require__(38);\r\n\tvar navigation_box_model_1 = __webpack_require__(356);\r\n\tvar NavigationBoxService = (function () {\r\n\t    function NavigationBoxService(http) {\r\n\t        this.http = http;\r\n\t        this.apiUrl = \"./src/app/navigation-boxes/navigation-box-data.json\";\r\n\t    }\r\n\t    ;\r\n\t    NavigationBoxService.prototype.getNavigationBoxes = function () {\r\n\t        return this.http.get(this.apiUrl)\r\n\t            .map(function (responseData) {\r\n\t            return responseData.json().data;\r\n\t        })\r\n\t            .map(function (navBoxes) {\r\n\t            var result = [];\r\n\t            if (navBoxes) {\r\n\t                navBoxes.forEach(function (navBox) {\r\n\t                    result.push(new navigation_box_model_1.NavigationBox(navBox.linkDescription, navBox.linkText, navBox.linkUrl));\r\n\t                });\r\n\t            }\r\n\t            return result;\r\n\t        })\r\n\t            .catch(this.handleError);\r\n\t    };\r\n\t    NavigationBoxService.prototype.handleError = function (error) {\r\n\t        console.error(error);\r\n\t        return Observable_1.Observable.throw(error.json().error || 'Server error');\r\n\t    };\r\n\t    NavigationBoxService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [http_1.Http])\r\n\t    ], NavigationBoxService);\r\n\t    return NavigationBoxService;\r\n\t}());\r\n\texports.NavigationBoxService = NavigationBoxService;\r\n\n\n/***/ },\n\n/***/ 356:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar NavigationBox = (function () {\r\n\t    function NavigationBox(linkDescription, linkText, linkUrl) {\r\n\t        this.isHidden = true;\r\n\t        this.isHovered = false;\r\n\t        this.linkDescription = linkDescription;\r\n\t        this.linkText = linkText;\r\n\t        this.linkUrl = linkUrl;\r\n\t    }\r\n\t    NavigationBox.prototype.displayShortDescription = function (description, length) {\r\n\t        var trimmedString = description.substring(0, length) + \"...\";\r\n\t        return trimmedString;\r\n\t    };\r\n\t    return NavigationBox;\r\n\t}());\r\n\texports.NavigationBox = NavigationBox;\r\n\n\n/***/ },\n\n/***/ 357:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(5);\r\n\tvar top_menu_service_1 = __webpack_require__(358);\r\n\tvar TopMenuComponent = (function () {\r\n\t    function TopMenuComponent(topMenuService) {\r\n\t        this.topMenuService = topMenuService;\r\n\t        this.show = false;\r\n\t    }\r\n\t    TopMenuComponent.prototype.getNavigationBoxes = function () {\r\n\t        var _this = this;\r\n\t        this.topMenuService.getMenuItems()\r\n\t            .subscribe(function (response) { return _this.topMenuItems = response; }, function (error) { return _this.errorMessage = error; });\r\n\t    };\r\n\t    ;\r\n\t    TopMenuComponent.prototype.ngOnInit = function () {\r\n\t        this.getNavigationBoxes();\r\n\t    };\r\n\t    ;\r\n\t    TopMenuComponent.prototype.displayMenuForMobile = function () {\r\n\t        this.show = !this.show;\r\n\t    };\r\n\t    TopMenuComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: \"<nav>\",\r\n\t            templateUrl: './src/app/top-menu/top-menu.component.html',\r\n\t            providers: [top_menu_service_1.TopMenuService]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [top_menu_service_1.TopMenuService])\r\n\t    ], TopMenuComponent);\r\n\t    return TopMenuComponent;\r\n\t}());\r\n\texports.TopMenuComponent = TopMenuComponent;\r\n\n\n/***/ },\n\n/***/ 358:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(5);\r\n\tvar http_1 = __webpack_require__(325);\r\n\t__webpack_require__(349);\r\n\t__webpack_require__(352);\r\n\t__webpack_require__(354);\r\n\tvar Observable_1 = __webpack_require__(38);\r\n\tvar top_menu_model_1 = __webpack_require__(359);\r\n\tvar TopMenuService = (function () {\r\n\t    function TopMenuService(http) {\r\n\t        this.http = http;\r\n\t        this.apiUrl = \"./src/app/top-menu/top-menu-data.json\";\r\n\t    }\r\n\t    ;\r\n\t    TopMenuService.prototype.getMenuItems = function () {\r\n\t        return this.http.get(this.apiUrl)\r\n\t            .map(function (responseData) {\r\n\t            return responseData.json().data;\r\n\t        })\r\n\t            .map(function (menuItems) {\r\n\t            var results = [];\r\n\t            if (menuItems) {\r\n\t                menuItems.forEach(function (item) {\r\n\t                    results.push(new top_menu_model_1.TopMenuItem(item.title, item.linkUrl));\r\n\t                });\r\n\t            }\r\n\t            ;\r\n\t            return results;\r\n\t        })\r\n\t            .catch(this.handleError);\r\n\t    };\r\n\t    ;\r\n\t    TopMenuService.prototype.handleError = function (error) {\r\n\t        console.error(error);\r\n\t        return Observable_1.Observable.throw(error.json().error || 'Server error');\r\n\t    };\r\n\t    ;\r\n\t    TopMenuService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [http_1.Http])\r\n\t    ], TopMenuService);\r\n\t    return TopMenuService;\r\n\t}());\r\n\texports.TopMenuService = TopMenuService;\r\n\n\n/***/ },\n\n/***/ 359:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar TopMenuItem = (function () {\r\n\t    function TopMenuItem(title, linkUrl) {\r\n\t        this.title = title;\r\n\t        this.linkUrl = linkUrl;\r\n\t    }\r\n\t    return TopMenuItem;\r\n\t}());\r\n\texports.TopMenuItem = TopMenuItem;\r\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** app.9f198500d0bf9344d7bd.js\n **/","import { bootstrap } from '@angular/platform-browser-dynamic';\r\nimport { HTTP_PROVIDERS } from '@angular/http';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { AppComponent } from './app/app.component';\r\n\r\nif (process.env.ENV === 'production') {\r\n  enableProdMode();\r\n}\r\nbootstrap(AppComponent, [ HTTP_PROVIDERS ]).\r\n    then(success => console.log(`Bootstrap success`))\r\n   .catch(error => console.log(error));;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.ts\n **/","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./http'));\n//# sourceMappingURL=index.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/http/index.js\n ** module id = 325\n ** module chunks = 0\n **/","\"use strict\";\nvar browser_jsonp_1 = require('./src/backends/browser_jsonp');\nvar browser_xhr_1 = require('./src/backends/browser_xhr');\nvar jsonp_backend_1 = require('./src/backends/jsonp_backend');\nvar xhr_backend_1 = require('./src/backends/xhr_backend');\nvar base_request_options_1 = require('./src/base_request_options');\nvar base_response_options_1 = require('./src/base_response_options');\nvar http_1 = require('./src/http');\nvar interfaces_1 = require('./src/interfaces');\nvar browser_xhr_2 = require('./src/backends/browser_xhr');\nexports.BrowserXhr = browser_xhr_2.BrowserXhr;\nvar jsonp_backend_2 = require('./src/backends/jsonp_backend');\nexports.JSONPBackend = jsonp_backend_2.JSONPBackend;\nexports.JSONPConnection = jsonp_backend_2.JSONPConnection;\nvar xhr_backend_2 = require('./src/backends/xhr_backend');\nexports.CookieXSRFStrategy = xhr_backend_2.CookieXSRFStrategy;\nexports.XHRBackend = xhr_backend_2.XHRBackend;\nexports.XHRConnection = xhr_backend_2.XHRConnection;\nvar base_request_options_2 = require('./src/base_request_options');\nexports.BaseRequestOptions = base_request_options_2.BaseRequestOptions;\nexports.RequestOptions = base_request_options_2.RequestOptions;\nvar base_response_options_2 = require('./src/base_response_options');\nexports.BaseResponseOptions = base_response_options_2.BaseResponseOptions;\nexports.ResponseOptions = base_response_options_2.ResponseOptions;\nvar enums_1 = require('./src/enums');\nexports.ReadyState = enums_1.ReadyState;\nexports.RequestMethod = enums_1.RequestMethod;\nexports.ResponseType = enums_1.ResponseType;\nvar headers_1 = require('./src/headers');\nexports.Headers = headers_1.Headers;\nvar http_2 = require('./src/http');\nexports.Http = http_2.Http;\nexports.Jsonp = http_2.Jsonp;\nvar interfaces_2 = require('./src/interfaces');\nexports.Connection = interfaces_2.Connection;\nexports.ConnectionBackend = interfaces_2.ConnectionBackend;\nexports.XSRFStrategy = interfaces_2.XSRFStrategy;\nvar static_request_1 = require('./src/static_request');\nexports.Request = static_request_1.Request;\nvar static_response_1 = require('./src/static_response');\nexports.Response = static_response_1.Response;\nvar url_search_params_1 = require('./src/url_search_params');\nexports.URLSearchParams = url_search_params_1.URLSearchParams;\n/**\n * Provides a basic set of injectables to use the {@link Http} service in any application.\n *\n * The `HTTP_PROVIDERS` should be included either in a component's injector,\n * or in the root injector when bootstrapping an application.\n *\n * ### Example ([live demo](http://plnkr.co/edit/snj7Nv?p=preview))\n *\n * ```\n * import {Component} from '@angular/core';\n * import {bootstrap} from '@angular/platform-browser/browser';\n * import {NgFor} from '@angular/common';\n * import {HTTP_PROVIDERS, Http} from '@angular/http';\n *\n * @Component({\n *   selector: 'app',\n *   providers: [HTTP_PROVIDERS],\n *   template: `\n *     <div>\n *       <h1>People</h1>\n *       <ul>\n *         <li *ngFor=\"let person of people\">\n *           {{person.name}}\n *         </li>\n *       </ul>\n *     </div>\n *   `,\n *   directives: [NgFor]\n * })\n * export class App {\n *   people: Object[];\n *   constructor(http:Http) {\n *     http.get('people.json').subscribe(res => {\n *       this.people = res.json();\n *     });\n *   }\n *   active:boolean = false;\n *   toggleActiveState() {\n *     this.active = !this.active;\n *   }\n * }\n *\n * bootstrap(App)\n *   .catch(err => console.error(err));\n * ```\n *\n * The primary public API included in `HTTP_PROVIDERS` is the {@link Http} class.\n * However, other providers required by `Http` are included,\n * which may be beneficial to override in certain cases.\n *\n * The providers included in `HTTP_PROVIDERS` include:\n *  * {@link Http}\n *  * {@link XHRBackend}\n *  * {@link XSRFStrategy} - Bound to {@link CookieXSRFStrategy} class (see below)\n *  * `BrowserXHR` - Private factory to create `XMLHttpRequest` instances\n *  * {@link RequestOptions} - Bound to {@link BaseRequestOptions} class\n *  * {@link ResponseOptions} - Bound to {@link BaseResponseOptions} class\n *\n * There may be cases where it makes sense to extend the base request options,\n * such as to add a search string to be appended to all URLs.\n * To accomplish this, a new provider for {@link RequestOptions} should\n * be added in the same injector as `HTTP_PROVIDERS`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/aCMEXi?p=preview))\n *\n * ```\n * import {provide} from '@angular/core';\n * import {bootstrap} from '@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, BaseRequestOptions, RequestOptions} from '@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: RequestOptions, useClass: MyOptions}])\n *   .catch(err => console.error(err));\n * ```\n *\n * Likewise, to use a mock backend for unit tests, the {@link XHRBackend}\n * provider should be bound to {@link MockBackend}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7LWALD?p=preview))\n *\n * ```\n * import {provide} from '@angular/core';\n * import {bootstrap} from '@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Http, Response, XHRBackend} from '@angular/http';\n * import {MockBackend} from '@angular/http/testing';\n *\n * var people = [{name: 'Jeff'}, {name: 'Tobias'}];\n *\n * var injector = Injector.resolveAndCreate([\n *   HTTP_PROVIDERS,\n *   MockBackend,\n *   {provide: XHRBackend, useExisting: MockBackend}\n * ]);\n * var http = injector.get(Http);\n * var backend = injector.get(MockBackend);\n *\n * // Listen for any new requests\n * backend.connections.observer({\n *   next: connection => {\n *     var response = new Response({body: people});\n *     setTimeout(() => {\n *       // Send a response to the request\n *       connection.mockRespond(response);\n *     });\n *   }\n * });\n *\n * http.get('people.json').observer({\n *   next: res => {\n *     // Response came from mock backend\n *     console.log('first person', res.json()[0].name);\n *   }\n * });\n * ```\n *\n * `XSRFStrategy` allows customizing how the application protects itself against Cross Site Request\n * Forgery (XSRF) attacks. By default, Angular will look for a cookie called `'XSRF-TOKEN'`, and set\n * an HTTP request header called `'X-XSRF-TOKEN'` with the value of the cookie on each request,\n * allowing the server side to validate that the request comes from its own front end.\n *\n * Applications can override the names used by configuring a different `XSRFStrategy` instance. Most\n * commonly, applications will configure a `CookieXSRFStrategy` with different cookie or header\n * names, but if needed, they can supply a completely custom implementation.\n *\n * See the security documentation for more information.\n *\n * ### Example\n *\n * ```\n * import {provide} from '@angular/core';\n * import {bootstrap} from '@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, XSRFStrategy, CookieXSRFStrategy} from '@angular/http';\n *\n * bootstrap(\n *     App,\n *     [HTTP_PROVIDERS, {provide: XSRFStrategy,\n *         useValue: new CookieXSRFStrategy('MY-XSRF-COOKIE-NAME', 'X-MY-XSRF-HEADER-NAME')}])\n *   .catch(err => console.error(err));\n * ```\n */\nexports.HTTP_PROVIDERS = [\n    // TODO(pascal): use factory type annotations once supported in DI\n    // issue: https://github.com/angular/angular/issues/3183\n    { provide: http_1.Http, useFactory: httpFactory, deps: [xhr_backend_1.XHRBackend, base_request_options_1.RequestOptions] },\n    browser_xhr_1.BrowserXhr,\n    { provide: base_request_options_1.RequestOptions, useClass: base_request_options_1.BaseRequestOptions },\n    { provide: base_response_options_1.ResponseOptions, useClass: base_response_options_1.BaseResponseOptions },\n    xhr_backend_1.XHRBackend,\n    { provide: interfaces_1.XSRFStrategy, useValue: new xhr_backend_1.CookieXSRFStrategy() },\n];\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new http_1.Http(xhrBackend, requestOptions);\n}\nexports.httpFactory = httpFactory;\n/**\n * See {@link HTTP_PROVIDERS} instead.\n *\n * @deprecated\n */\nexports.HTTP_BINDINGS = exports.HTTP_PROVIDERS;\n/**\n * Provides a basic set of providers to use the {@link Jsonp} service in any application.\n *\n * The `JSONP_PROVIDERS` should be included either in a component's injector,\n * or in the root injector when bootstrapping an application.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vmeN4F?p=preview))\n *\n * ```\n * import {Component} from '@angular/core';\n * import {NgFor} from '@angular/common';\n * import {JSONP_PROVIDERS, Jsonp} from '@angular/http';\n *\n * @Component({\n *   selector: 'app',\n *   providers: [JSONP_PROVIDERS],\n *   template: `\n *     <div>\n *       <h1>People</h1>\n *       <ul>\n *         <li *ngFor=\"let person of people\">\n *           {{person.name}}\n *         </li>\n *       </ul>\n *     </div>\n *   `,\n *   directives: [NgFor]\n * })\n * export class App {\n *   people: Array<Object>;\n *   constructor(jsonp:Jsonp) {\n *     jsonp.request('people.json').subscribe(res => {\n *       this.people = res.json();\n *     })\n *   }\n * }\n * ```\n *\n * The primary public API included in `JSONP_PROVIDERS` is the {@link Jsonp} class.\n * However, other providers required by `Jsonp` are included,\n * which may be beneficial to override in certain cases.\n *\n * The providers included in `JSONP_PROVIDERS` include:\n *  * {@link Jsonp}\n *  * {@link JSONPBackend}\n *  * `BrowserJsonp` - Private factory\n *  * {@link RequestOptions} - Bound to {@link BaseRequestOptions} class\n *  * {@link ResponseOptions} - Bound to {@link BaseResponseOptions} class\n *\n * There may be cases where it makes sense to extend the base request options,\n * such as to add a search string to be appended to all URLs.\n * To accomplish this, a new provider for {@link RequestOptions} should\n * be added in the same injector as `JSONP_PROVIDERS`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/TFug7x?p=preview))\n *\n * ```\n * import {provide} from '@angular/core';\n * import {bootstrap} from '@angular/platform-browser/browser';\n * import {JSONP_PROVIDERS, BaseRequestOptions, RequestOptions} from '@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * bootstrap(App, [JSONP_PROVIDERS, {provide: RequestOptions, useClass: MyOptions}])\n *   .catch(err => console.error(err));\n * ```\n *\n * Likewise, to use a mock backend for unit tests, the {@link JSONPBackend}\n * provider should be bound to {@link MockBackend}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/HDqZWL?p=preview))\n *\n * ```\n * import {provide, Injector} from '@angular/core';\n * import {JSONP_PROVIDERS, Jsonp, Response, JSONPBackend} from '@angular/http';\n * import {MockBackend} from '@angular/http/testing';\n *\n * var people = [{name: 'Jeff'}, {name: 'Tobias'}];\n * var injector = Injector.resolveAndCreate([\n *   JSONP_PROVIDERS,\n *   MockBackend,\n *   {provide: JSONPBackend, useExisting: MockBackend}\n * ]);\n * var jsonp = injector.get(Jsonp);\n * var backend = injector.get(MockBackend);\n *\n * // Listen for any new requests\n * backend.connections.observer({\n *   next: connection => {\n *     var response = new Response({body: people});\n *     setTimeout(() => {\n *       // Send a response to the request\n *       connection.mockRespond(response);\n *     });\n *   }\n * });\n\n * jsonp.get('people.json').observer({\n *   next: res => {\n *     // Response came from mock backend\n *     console.log('first person', res.json()[0].name);\n *   }\n * });\n * ```\n */\nexports.JSONP_PROVIDERS = [\n    // TODO(pascal): use factory type annotations once supported in DI\n    // issue: https://github.com/angular/angular/issues/3183\n    { provide: http_1.Jsonp, useFactory: jsonpFactory, deps: [jsonp_backend_1.JSONPBackend, base_request_options_1.RequestOptions] },\n    browser_jsonp_1.BrowserJsonp,\n    { provide: base_request_options_1.RequestOptions, useClass: base_request_options_1.BaseRequestOptions },\n    { provide: base_response_options_1.ResponseOptions, useClass: base_response_options_1.BaseResponseOptions },\n    { provide: jsonp_backend_1.JSONPBackend, useClass: jsonp_backend_1.JSONPBackend_ },\n];\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new http_1.Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * See {@link JSONP_PROVIDERS} instead.\n *\n * @deprecated\n */\nexports.JSON_BINDINGS = exports.JSONP_PROVIDERS;\n//# sourceMappingURL=http.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/http/http.js\n ** module id = 326\n ** module chunks = 0\n **/","\"use strict\";\nvar core_1 = require('@angular/core');\nvar lang_1 = require('../facade/lang');\nvar _nextRequestId = 0;\nexports.JSONP_HOME = '__ng_jsonp__';\nvar _jsonpConnections = null;\nfunction _getJsonpConnections() {\n    if (_jsonpConnections === null) {\n        _jsonpConnections = lang_1.global[exports.JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\nvar BrowserJsonp = (function () {\n    function BrowserJsonp() {\n    }\n    // Construct a <script> element with the specified URL\n    BrowserJsonp.prototype.build = function (url) {\n        var node = document.createElement('script');\n        node.src = url;\n        return node;\n    };\n    BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n    BrowserJsonp.prototype.requestCallback = function (id) { return exports.JSONP_HOME + \".\" + id + \".finished\"; };\n    BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n        var connections = _getJsonpConnections();\n        connections[id] = connection;\n    };\n    BrowserJsonp.prototype.removeConnection = function (id) {\n        var connections = _getJsonpConnections();\n        connections[id] = null;\n    };\n    // Attach the <script> element to the DOM\n    BrowserJsonp.prototype.send = function (node) { document.body.appendChild((node)); };\n    // Remove <script> element from the DOM\n    BrowserJsonp.prototype.cleanup = function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild((node));\n        }\n    };\n    /** @nocollapse */\n    BrowserJsonp.decorators = [\n        { type: core_1.Injectable },\n    ];\n    return BrowserJsonp;\n}());\nexports.BrowserJsonp = BrowserJsonp;\n//# sourceMappingURL=browser_jsonp.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/http/src/backends/browser_jsonp.js\n ** module id = 327\n ** module chunks = 0\n **/","\"use strict\";\nvar core_1 = require('@angular/core');\nvar BrowserXhr = (function () {\n    function BrowserXhr() {\n    }\n    BrowserXhr.prototype.build = function () { return (new XMLHttpRequest()); };\n    /** @nocollapse */\n    BrowserXhr.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    BrowserXhr.ctorParameters = [];\n    return BrowserXhr;\n}());\nexports.BrowserXhr = BrowserXhr;\n//# sourceMappingURL=browser_xhr.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/http/src/backends/browser_xhr.js\n ** module id = 329\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar Observable_1 = require('rxjs/Observable');\nvar base_response_options_1 = require('../base_response_options');\nvar enums_1 = require('../enums');\nvar exceptions_1 = require('../facade/exceptions');\nvar lang_1 = require('../facade/lang');\nvar interfaces_1 = require('../interfaces');\nvar static_response_1 = require('../static_response');\nvar browser_jsonp_1 = require('./browser_jsonp');\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Abstract base class for an in-flight JSONP request.\n */\nvar JSONPConnection = (function () {\n    function JSONPConnection() {\n    }\n    return JSONPConnection;\n}());\nexports.JSONPConnection = JSONPConnection;\nvar JSONPConnection_ = (function (_super) {\n    __extends(JSONPConnection_, _super);\n    function JSONPConnection_(req, _dom, baseResponseOptions) {\n        var _this = this;\n        _super.call(this);\n        this._dom = _dom;\n        this.baseResponseOptions = baseResponseOptions;\n        this._finished = false;\n        if (req.method !== enums_1.RequestMethod.Get) {\n            throw exceptions_1.makeTypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        this.request = req;\n        this.response = new Observable_1.Observable(function (responseObserver) {\n            _this.readyState = enums_1.ReadyState.Loading;\n            var id = _this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var callback = _dom.requestCallback(_this._id);\n            var url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = lang_1.StringWrapper.replace(url, '=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n            }\n            var script = _this._script = _dom.build(url);\n            var onLoad = function (event) {\n                if (_this.readyState === enums_1.ReadyState.Cancelled)\n                    return;\n                _this.readyState = enums_1.ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this._finished) {\n                    var responseOptions_1 = new base_response_options_1.ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: enums_1.ResponseType.Error, url: url });\n                    if (lang_1.isPresent(baseResponseOptions)) {\n                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                    }\n                    responseObserver.error(new static_response_1.Response(responseOptions_1));\n                    return;\n                }\n                var responseOptions = new base_response_options_1.ResponseOptions({ body: _this._responseData, url: url });\n                if (lang_1.isPresent(_this.baseResponseOptions)) {\n                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new static_response_1.Response(responseOptions));\n                responseObserver.complete();\n            };\n            var onError = function (error) {\n                if (_this.readyState === enums_1.ReadyState.Cancelled)\n                    return;\n                _this.readyState = enums_1.ReadyState.Done;\n                _dom.cleanup(script);\n                var responseOptions = new base_response_options_1.ResponseOptions({ body: error.message, type: enums_1.ResponseType.Error });\n                if (lang_1.isPresent(baseResponseOptions)) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new static_response_1.Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this.readyState = enums_1.ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                if (lang_1.isPresent(script)) {\n                    _this._dom.cleanup(script);\n                }\n            };\n        });\n    }\n    JSONPConnection_.prototype.finished = function (data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === enums_1.ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    };\n    return JSONPConnection_;\n}(JSONPConnection));\nexports.JSONPConnection_ = JSONPConnection_;\n/**\n * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.\n */\nvar JSONPBackend = (function (_super) {\n    __extends(JSONPBackend, _super);\n    function JSONPBackend() {\n        _super.apply(this, arguments);\n    }\n    return JSONPBackend;\n}(interfaces_1.ConnectionBackend));\nexports.JSONPBackend = JSONPBackend;\nvar JSONPBackend_ = (function (_super) {\n    __extends(JSONPBackend_, _super);\n    function JSONPBackend_(_browserJSONP, _baseResponseOptions) {\n        _super.call(this);\n        this._browserJSONP = _browserJSONP;\n        this._baseResponseOptions = _baseResponseOptions;\n    }\n    JSONPBackend_.prototype.createConnection = function (request) {\n        return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n    };\n    /** @nocollapse */\n    JSONPBackend_.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    JSONPBackend_.ctorParameters = [\n        { type: browser_jsonp_1.BrowserJsonp, },\n        { type: base_response_options_1.ResponseOptions, },\n    ];\n    return JSONPBackend_;\n}(JSONPBackend));\nexports.JSONPBackend_ = JSONPBackend_;\n//# sourceMappingURL=jsonp_backend.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/http/src/backends/jsonp_backend.js\n ** module id = 330\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar lang_1 = require('../src/facade/lang');\nvar enums_1 = require('./enums');\nvar headers_1 = require('./headers');\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {@link Response Responses} for\n * mock responses (see {@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n */\nvar ResponseOptions = (function () {\n    function ResponseOptions(_a) {\n        var _b = _a === void 0 ? {} : _a, body = _b.body, status = _b.status, headers = _b.headers, statusText = _b.statusText, type = _b.type, url = _b.url;\n        this.body = lang_1.isPresent(body) ? body : null;\n        this.status = lang_1.isPresent(status) ? status : null;\n        this.headers = lang_1.isPresent(headers) ? headers : null;\n        this.statusText = lang_1.isPresent(statusText) ? statusText : null;\n        this.type = lang_1.isPresent(type) ? type : null;\n        this.url = lang_1.isPresent(url) ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     */\n    ResponseOptions.prototype.merge = function (options) {\n        return new ResponseOptions({\n            body: lang_1.isPresent(options) && lang_1.isPresent(options.body) ? options.body : this.body,\n            status: lang_1.isPresent(options) && lang_1.isPresent(options.status) ? options.status : this.status,\n            headers: lang_1.isPresent(options) && lang_1.isPresent(options.headers) ? options.headers : this.headers,\n            statusText: lang_1.isPresent(options) && lang_1.isPresent(options.statusText) ? options.statusText :\n                this.statusText,\n            type: lang_1.isPresent(options) && lang_1.isPresent(options.type) ? options.type : this.type,\n            url: lang_1.isPresent(options) && lang_1.isPresent(options.url) ? options.url : this.url,\n        });\n    };\n    return ResponseOptions;\n}());\nexports.ResponseOptions = ResponseOptions;\nvar BaseResponseOptions = (function (_super) {\n    __extends(BaseResponseOptions, _super);\n    function BaseResponseOptions() {\n        _super.call(this, { status: 200, statusText: 'Ok', type: enums_1.ResponseType.Default, headers: new headers_1.Headers() });\n    }\n    /** @nocollapse */\n    BaseResponseOptions.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    BaseResponseOptions.ctorParameters = [];\n    return BaseResponseOptions;\n}(ResponseOptions));\nexports.BaseResponseOptions = BaseResponseOptions;\n//# sourceMappingURL=base_response_options.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/http/src/base_response_options.js\n ** module id = 331\n ** module chunks = 0\n **/","\"use strict\";\n/**\n * Supported http methods.\n */\n(function (RequestMethod) {\n    RequestMethod[RequestMethod[\"Get\"] = 0] = \"Get\";\n    RequestMethod[RequestMethod[\"Post\"] = 1] = \"Post\";\n    RequestMethod[RequestMethod[\"Put\"] = 2] = \"Put\";\n    RequestMethod[RequestMethod[\"Delete\"] = 3] = \"Delete\";\n    RequestMethod[RequestMethod[\"Options\"] = 4] = \"Options\";\n    RequestMethod[RequestMethod[\"Head\"] = 5] = \"Head\";\n    RequestMethod[RequestMethod[\"Patch\"] = 6] = \"Patch\";\n})(exports.RequestMethod || (exports.RequestMethod = {}));\nvar RequestMethod = exports.RequestMethod;\n/**\n * All possible states in which a connection can be, based on\n * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an\n * additional \"CANCELLED\" state.\n */\n(function (ReadyState) {\n    ReadyState[ReadyState[\"Unsent\"] = 0] = \"Unsent\";\n    ReadyState[ReadyState[\"Open\"] = 1] = \"Open\";\n    ReadyState[ReadyState[\"HeadersReceived\"] = 2] = \"HeadersReceived\";\n    ReadyState[ReadyState[\"Loading\"] = 3] = \"Loading\";\n    ReadyState[ReadyState[\"Done\"] = 4] = \"Done\";\n    ReadyState[ReadyState[\"Cancelled\"] = 5] = \"Cancelled\";\n})(exports.ReadyState || (exports.ReadyState = {}));\nvar ReadyState = exports.ReadyState;\n/**\n * Acceptable response types to be associated with a {@link Response}, based on\n * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.\n */\n(function (ResponseType) {\n    ResponseType[ResponseType[\"Basic\"] = 0] = \"Basic\";\n    ResponseType[ResponseType[\"Cors\"] = 1] = \"Cors\";\n    ResponseType[ResponseType[\"Default\"] = 2] = \"Default\";\n    ResponseType[ResponseType[\"Error\"] = 3] = \"Error\";\n    ResponseType[ResponseType[\"Opaque\"] = 4] = \"Opaque\";\n})(exports.ResponseType || (exports.ResponseType = {}));\nvar ResponseType = exports.ResponseType;\n/**\n * Supported content type to be automatically associated with a {@link Request}.\n */\n(function (ContentType) {\n    ContentType[ContentType[\"NONE\"] = 0] = \"NONE\";\n    ContentType[ContentType[\"JSON\"] = 1] = \"JSON\";\n    ContentType[ContentType[\"FORM\"] = 2] = \"FORM\";\n    ContentType[ContentType[\"FORM_DATA\"] = 3] = \"FORM_DATA\";\n    ContentType[ContentType[\"TEXT\"] = 4] = \"TEXT\";\n    ContentType[ContentType[\"BLOB\"] = 5] = \"BLOB\";\n    ContentType[ContentType[\"ARRAY_BUFFER\"] = 6] = \"ARRAY_BUFFER\";\n})(exports.ContentType || (exports.ContentType = {}));\nvar ContentType = exports.ContentType;\n//# sourceMappingURL=enums.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/http/src/enums.js\n ** module id = 332\n ** module chunks = 0\n **/","\"use strict\";\nvar exceptions_1 = require('../src/facade/exceptions');\nvar lang_1 = require('../src/facade/lang');\nvar collection_1 = require('../src/facade/collection');\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example ([live demo](http://plnkr.co/edit/MTdwT6?p=preview))\n *\n * ```\n * import {Headers} from '@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n */\nvar Headers = (function () {\n    function Headers(headers) {\n        var _this = this;\n        if (headers instanceof Headers) {\n            this._headersMap = headers._headersMap;\n            return;\n        }\n        this._headersMap = new collection_1.Map();\n        if (lang_1.isBlank(headers)) {\n            return;\n        }\n        // headers instanceof StringMap\n        collection_1.StringMapWrapper.forEach(headers, function (v, k) {\n            _this._headersMap.set(k, collection_1.isListLikeIterable(v) ? v : [v]);\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     */\n    Headers.fromResponseHeaderString = function (headersString) {\n        return headersString.trim()\n            .split('\\n')\n            .map(function (val) { return val.split(':'); })\n            .map(function (_a) {\n            var key = _a[0], parts = _a.slice(1);\n            return ([key.trim(), parts.join(':').trim()]);\n        })\n            .reduce(function (headers, _a) {\n            var key = _a[0], value = _a[1];\n            return !headers.set(key, value) && headers;\n        }, new Headers());\n    };\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     */\n    Headers.prototype.append = function (name, value) {\n        var mapName = this._headersMap.get(name);\n        var list = collection_1.isListLikeIterable(mapName) ? mapName : [];\n        list.push(value);\n        this._headersMap.set(name, list);\n    };\n    /**\n     * Deletes all header values for the given name.\n     */\n    Headers.prototype.delete = function (name) { this._headersMap.delete(name); };\n    Headers.prototype.forEach = function (fn) {\n        this._headersMap.forEach(fn);\n    };\n    /**\n     * Returns first header that matches given name.\n     */\n    Headers.prototype.get = function (header) { return collection_1.ListWrapper.first(this._headersMap.get(header)); };\n    /**\n     * Check for existence of header by given name.\n     */\n    Headers.prototype.has = function (header) { return this._headersMap.has(header); };\n    /**\n     * Provides names of set headers\n     */\n    Headers.prototype.keys = function () { return collection_1.MapWrapper.keys(this._headersMap); };\n    /**\n     * Sets or overrides header value for given name.\n     */\n    Headers.prototype.set = function (header, value) {\n        var list = [];\n        if (collection_1.isListLikeIterable(value)) {\n            var pushValue = value.join(',');\n            list.push(pushValue);\n        }\n        else {\n            list.push(value);\n        }\n        this._headersMap.set(header, list);\n    };\n    /**\n     * Returns values of all headers.\n     */\n    Headers.prototype.values = function () { return collection_1.MapWrapper.values(this._headersMap); };\n    /**\n     * Returns string of all headers.\n     */\n    Headers.prototype.toJSON = function () {\n        var serializableHeaders = {};\n        this._headersMap.forEach(function (values, name) {\n            var list = [];\n            collection_1.iterateListLike(values, function (val /** TODO #9100 */) { return list = collection_1.ListWrapper.concat(list, val.split(',')); });\n            serializableHeaders[name] = list;\n        });\n        return serializableHeaders;\n    };\n    /**\n     * Returns list of header values for a given name.\n     */\n    Headers.prototype.getAll = function (header) {\n        var headers = this._headersMap.get(header);\n        return collection_1.isListLikeIterable(headers) ? headers : [];\n    };\n    /**\n     * This method is not implemented.\n     */\n    Headers.prototype.entries = function () { throw new exceptions_1.BaseException('\"entries\" method is not implemented on Headers class'); };\n    return Headers;\n}());\nexports.Headers = Headers;\n//# sourceMappingURL=headers.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/http/src/headers.js\n ** module id = 333\n ** module chunks = 0\n **/","\"use strict\";\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {@link Request}.\n */\nvar ConnectionBackend = (function () {\n    function ConnectionBackend() {\n    }\n    return ConnectionBackend;\n}());\nexports.ConnectionBackend = ConnectionBackend;\n/**\n * Abstract class from which real connections are derived.\n */\nvar Connection = (function () {\n    function Connection() {\n    }\n    return Connection;\n}());\nexports.Connection = Connection;\n/** An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request. */\nvar XSRFStrategy = (function () {\n    function XSRFStrategy() {\n    }\n    return XSRFStrategy;\n}());\nexports.XSRFStrategy = XSRFStrategy;\n//# sourceMappingURL=interfaces.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/http/src/interfaces.js\n ** module id = 338\n ** module chunks = 0\n **/","\"use strict\";\nvar exceptions_1 = require('../src/facade/exceptions');\nvar lang_1 = require('../src/facade/lang');\nvar http_utils_1 = require('./http_utils');\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n */\nvar Response = (function () {\n    function Response(responseOptions) {\n        this._body = responseOptions.body;\n        this.status = responseOptions.status;\n        this.ok = (this.status >= 200 && this.status <= 299);\n        this.statusText = responseOptions.statusText;\n        this.headers = responseOptions.headers;\n        this.type = responseOptions.type;\n        this.url = responseOptions.url;\n    }\n    /**\n     * Not yet implemented\n     */\n    // TODO: Blob return type\n    Response.prototype.blob = function () { throw new exceptions_1.BaseException('\"blob()\" method not implemented on Response superclass'); };\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     */\n    Response.prototype.json = function () {\n        var jsonResponse;\n        if (http_utils_1.isJsObject(this._body)) {\n            jsonResponse = this._body;\n        }\n        else if (lang_1.isString(this._body)) {\n            jsonResponse = lang_1.Json.parse(this._body);\n        }\n        return jsonResponse;\n    };\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     */\n    Response.prototype.text = function () { return this._body.toString(); };\n    /**\n     * Not yet implemented\n     */\n    // TODO: ArrayBuffer return type\n    Response.prototype.arrayBuffer = function () {\n        throw new exceptions_1.BaseException('\"arrayBuffer()\" method not implemented on Response superclass');\n    };\n    Response.prototype.toString = function () {\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n    };\n    return Response;\n}());\nexports.Response = Response;\n//# sourceMappingURL=static_response.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/http/src/static_response.js\n ** module id = 339\n ** module chunks = 0\n **/","\"use strict\";\nvar exceptions_1 = require('../src/facade/exceptions');\nvar lang_1 = require('../src/facade/lang');\nvar enums_1 = require('./enums');\nfunction normalizeMethodName(method) {\n    if (lang_1.isString(method)) {\n        var originalMethod = method;\n        method = method\n            .replace(/(\\w)(\\w*)/g, function (g0, g1, g2) { return g1.toUpperCase() + g2.toLowerCase(); });\n        method = enums_1.RequestMethod[method];\n        if (typeof method !== 'number')\n            throw exceptions_1.makeTypeError(\"Invalid request method. The method \\\"\" + originalMethod + \"\\\" is not supported.\");\n    }\n    return method;\n}\nexports.normalizeMethodName = normalizeMethodName;\nexports.isSuccess = function (status) { return (status >= 200 && status < 300); };\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return;\n}\nexports.getResponseURL = getResponseURL;\nvar lang_2 = require('../src/facade/lang');\nexports.isJsObject = lang_2.isJsObject;\n//# sourceMappingURL=http_utils.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/http/src/http_utils.js\n ** module id = 340\n ** module chunks = 0\n **/","\"use strict\";\nvar core_1 = require('@angular/core');\nvar platform_browser_1 = require('@angular/platform-browser');\nvar Observable_1 = require('rxjs/Observable');\nvar base_response_options_1 = require('../base_response_options');\nvar enums_1 = require('../enums');\nvar lang_1 = require('../facade/lang');\nvar headers_1 = require('../headers');\nvar http_utils_1 = require('../http_utils');\nvar interfaces_1 = require('../interfaces');\nvar static_response_1 = require('../static_response');\nvar browser_xhr_1 = require('./browser_xhr');\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {@link MockConnection} may be interacted with in tests.\n */\nvar XHRConnection = (function () {\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this = this;\n        this.request = req;\n        this.response = new Observable_1.Observable(function (responseObserver) {\n            var _xhr = browserXHR.build();\n            _xhr.open(enums_1.RequestMethod[req.method].toUpperCase(), req.url);\n            if (lang_1.isPresent(req.withCredentials)) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var onLoad = function () {\n                // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                // response/responseType properties were introduced in XHR Level2 spec (supported by\n                // IE10)\n                var body = lang_1.isPresent(_xhr.response) ? _xhr.response : _xhr.responseText;\n                // Implicitly strip a potential XSSI prefix.\n                if (lang_1.isString(body))\n                    body = body.replace(XSSI_PREFIX, '');\n                var headers = headers_1.Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                var url = http_utils_1.getResponseURL(_xhr);\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var statusText = _xhr.statusText || 'OK';\n                var responseOptions = new base_response_options_1.ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (lang_1.isPresent(baseResponseOptions)) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var response = new static_response_1.Response(responseOptions);\n                response.ok = http_utils_1.isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var onError = function (err) {\n                var responseOptions = new base_response_options_1.ResponseOptions({\n                    body: err,\n                    type: enums_1.ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText,\n                });\n                if (lang_1.isPresent(baseResponseOptions)) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new static_response_1.Response(responseOptions));\n            };\n            _this.setDetectedContentType(req, _xhr);\n            if (lang_1.isPresent(req.headers)) {\n                req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    XHRConnection.prototype.setDetectedContentType = function (req /** TODO #9100 */, _xhr /** TODO #9100 */) {\n        // Skip if a custom Content-Type header is provided\n        if (lang_1.isPresent(req.headers) && lang_1.isPresent(req.headers.get('Content-Type'))) {\n            return;\n        }\n        // Set the detected content type\n        switch (req.contentType) {\n            case enums_1.ContentType.NONE:\n                break;\n            case enums_1.ContentType.JSON:\n                _xhr.setRequestHeader('Content-Type', 'application/json');\n                break;\n            case enums_1.ContentType.FORM:\n                _xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                break;\n            case enums_1.ContentType.TEXT:\n                _xhr.setRequestHeader('Content-Type', 'text/plain');\n                break;\n            case enums_1.ContentType.BLOB:\n                var blob = req.blob();\n                if (blob.type) {\n                    _xhr.setRequestHeader('Content-Type', blob.type);\n                }\n                break;\n        }\n    };\n    return XHRConnection;\n}());\nexports.XHRConnection = XHRConnection;\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF) for more\n * information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n */\nvar CookieXSRFStrategy = (function () {\n    function CookieXSRFStrategy(_cookieName, _headerName) {\n        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    CookieXSRFStrategy.prototype.configureRequest = function (req) {\n        var xsrfToken = platform_browser_1.__platform_browser_private__.getDOM().getCookie(this._cookieName);\n        if (xsrfToken && !req.headers.has(this._headerName)) {\n            req.headers.set(this._headerName, xsrfToken);\n        }\n    };\n    return CookieXSRFStrategy;\n}());\nexports.CookieXSRFStrategy = CookieXSRFStrategy;\nvar XHRBackend = (function () {\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    XHRBackend.prototype.createConnection = function (request) {\n        this._xsrfStrategy.configureRequest(request);\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    };\n    /** @nocollapse */\n    XHRBackend.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    XHRBackend.ctorParameters = [\n        { type: browser_xhr_1.BrowserXhr, },\n        { type: base_response_options_1.ResponseOptions, },\n        { type: interfaces_1.XSRFStrategy, },\n    ];\n    return XHRBackend;\n}());\nexports.XHRBackend = XHRBackend;\n//# sourceMappingURL=xhr_backend.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/http/src/backends/xhr_backend.js\n ** module id = 341\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar lang_1 = require('../src/facade/lang');\nvar enums_1 = require('./enums');\nvar headers_1 = require('./headers');\nvar http_utils_1 = require('./http_utils');\nvar url_search_params_1 = require('./url_search_params');\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7Wvi3lfLq41aQPKlxB4O?p=preview))\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n *\n * var options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * var req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n */\nvar RequestOptions = (function () {\n    function RequestOptions(_a) {\n        var _b = _a === void 0 ? {} : _a, method = _b.method, headers = _b.headers, body = _b.body, url = _b.url, search = _b.search, withCredentials = _b.withCredentials;\n        this.method = lang_1.isPresent(method) ? http_utils_1.normalizeMethodName(method) : null;\n        this.headers = lang_1.isPresent(headers) ? headers : null;\n        this.body = lang_1.isPresent(body) ? body : null;\n        this.url = lang_1.isPresent(url) ? url : null;\n        this.search = lang_1.isPresent(search) ?\n            (lang_1.isString(search) ? new url_search_params_1.URLSearchParams((search)) : (search)) :\n            null;\n        this.withCredentials = lang_1.isPresent(withCredentials) ? withCredentials : null;\n    }\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/6w8XA8YTkDRcPYpdB9dk?p=preview))\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n     *\n     * var options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * var req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     */\n    RequestOptions.prototype.merge = function (options) {\n        return new RequestOptions({\n            method: lang_1.isPresent(options) && lang_1.isPresent(options.method) ? options.method : this.method,\n            headers: lang_1.isPresent(options) && lang_1.isPresent(options.headers) ? options.headers : this.headers,\n            body: lang_1.isPresent(options) && lang_1.isPresent(options.body) ? options.body : this.body,\n            url: lang_1.isPresent(options) && lang_1.isPresent(options.url) ? options.url : this.url,\n            search: lang_1.isPresent(options) && lang_1.isPresent(options.search) ?\n                (lang_1.isString(options.search) ? new url_search_params_1.URLSearchParams((options.search)) :\n                    (options.search).clone()) :\n                this.search,\n            withCredentials: lang_1.isPresent(options) && lang_1.isPresent(options.withCredentials) ?\n                options.withCredentials :\n                this.withCredentials\n        });\n    };\n    return RequestOptions;\n}());\nexports.RequestOptions = RequestOptions;\nvar BaseRequestOptions = (function (_super) {\n    __extends(BaseRequestOptions, _super);\n    function BaseRequestOptions() {\n        _super.call(this, { method: enums_1.RequestMethod.Get, headers: new headers_1.Headers() });\n    }\n    /** @nocollapse */\n    BaseRequestOptions.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    BaseRequestOptions.ctorParameters = [];\n    return BaseRequestOptions;\n}(RequestOptions));\nexports.BaseRequestOptions = BaseRequestOptions;\n//# sourceMappingURL=base_request_options.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/http/src/base_request_options.js\n ** module id = 342\n ** module chunks = 0\n **/","\"use strict\";\nvar collection_1 = require('../src/facade/collection');\nvar lang_1 = require('../src/facade/lang');\nfunction paramParser(rawParams) {\n    if (rawParams === void 0) { rawParams = ''; }\n    var map = new collection_1.Map();\n    if (rawParams.length > 0) {\n        var params = rawParams.split('&');\n        params.forEach(function (param) {\n            var split = param.split('=');\n            var key = split[0];\n            var val = split[1];\n            var list = lang_1.isPresent(map.get(key)) ? map.get(key) : [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n */\nvar URLSearchParams = (function () {\n    function URLSearchParams(rawParams) {\n        if (rawParams === void 0) { rawParams = ''; }\n        this.rawParams = rawParams;\n        this.paramsMap = paramParser(rawParams);\n    }\n    URLSearchParams.prototype.clone = function () {\n        var clone = new URLSearchParams();\n        clone.appendAll(this);\n        return clone;\n    };\n    URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n    URLSearchParams.prototype.get = function (param) {\n        var storedParam = this.paramsMap.get(param);\n        if (collection_1.isListLikeIterable(storedParam)) {\n            return collection_1.ListWrapper.first(storedParam);\n        }\n        else {\n            return null;\n        }\n    };\n    URLSearchParams.prototype.getAll = function (param) {\n        var mapParam = this.paramsMap.get(param);\n        return lang_1.isPresent(mapParam) ? mapParam : [];\n    };\n    URLSearchParams.prototype.set = function (param, val) {\n        var mapParam = this.paramsMap.get(param);\n        var list = lang_1.isPresent(mapParam) ? mapParam : [];\n        collection_1.ListWrapper.clear(list);\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.setAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var mapParam = _this.paramsMap.get(param);\n            var list = lang_1.isPresent(mapParam) ? mapParam : [];\n            collection_1.ListWrapper.clear(list);\n            list.push(value[0]);\n            _this.paramsMap.set(param, list);\n        });\n    };\n    URLSearchParams.prototype.append = function (param, val) {\n        var mapParam = this.paramsMap.get(param);\n        var list = lang_1.isPresent(mapParam) ? mapParam : [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `append(name, value)`\n    // for each value in `values`.\n    //\n    // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.appendAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var mapParam = _this.paramsMap.get(param);\n            var list = lang_1.isPresent(mapParam) ? mapParam : [];\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `delete(name)`,\n    // followed by `set(name, values)`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.replaceAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var mapParam = _this.paramsMap.get(param);\n            var list = lang_1.isPresent(mapParam) ? mapParam : [];\n            collection_1.ListWrapper.clear(list);\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    URLSearchParams.prototype.toString = function () {\n        var paramsList = [];\n        this.paramsMap.forEach(function (values, k) { values.forEach(function (v) { return paramsList.push(k + '=' + encodeURIComponent(v)); }); });\n        return paramsList.join('&');\n    };\n    URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n    return URLSearchParams;\n}());\nexports.URLSearchParams = URLSearchParams;\n//# sourceMappingURL=url_search_params.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/http/src/url_search_params.js\n ** module id = 343\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar exceptions_1 = require('../src/facade/exceptions');\nvar lang_1 = require('../src/facade/lang');\nvar base_request_options_1 = require('./base_request_options');\nvar enums_1 = require('./enums');\nvar interfaces_1 = require('./interfaces');\nvar static_request_1 = require('./static_request');\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var newOptions = defaultOpts;\n    if (lang_1.isPresent(providedOpts)) {\n        // Hack so Dart can used named parameters\n        return newOptions.merge(new base_request_options_1.RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials\n        }));\n    }\n    if (lang_1.isPresent(method)) {\n        return newOptions.merge(new base_request_options_1.RequestOptions({ method: method, url: url }));\n    }\n    else {\n        return newOptions.merge(new base_request_options_1.RequestOptions({ url: url }));\n    }\n}\nvar Http = (function () {\n    function Http(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     */\n    Http.prototype.request = function (url, options) {\n        var responseObservable;\n        if (lang_1.isString(url)) {\n            responseObservable = httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Get, url)));\n        }\n        else if (url instanceof static_request_1.Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw exceptions_1.makeTypeError('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /**\n     * Performs a request with `get` http method.\n     */\n    Http.prototype.get = function (url, options) {\n        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Get, url)));\n    };\n    /**\n     * Performs a request with `post` http method.\n     */\n    Http.prototype.post = function (url, body, options) {\n        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions.merge(new base_request_options_1.RequestOptions({ body: body })), options, enums_1.RequestMethod.Post, url)));\n    };\n    /**\n     * Performs a request with `put` http method.\n     */\n    Http.prototype.put = function (url, body, options) {\n        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions.merge(new base_request_options_1.RequestOptions({ body: body })), options, enums_1.RequestMethod.Put, url)));\n    };\n    /**\n     * Performs a request with `delete` http method.\n     */\n    Http.prototype.delete = function (url, options) {\n        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Delete, url)));\n    };\n    /**\n     * Performs a request with `patch` http method.\n     */\n    Http.prototype.patch = function (url, body, options) {\n        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions.merge(new base_request_options_1.RequestOptions({ body: body })), options, enums_1.RequestMethod.Patch, url)));\n    };\n    /**\n     * Performs a request with `head` http method.\n     */\n    Http.prototype.head = function (url, options) {\n        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Head, url)));\n    };\n    /** @nocollapse */\n    Http.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    Http.ctorParameters = [\n        { type: interfaces_1.ConnectionBackend, },\n        { type: base_request_options_1.RequestOptions, },\n    ];\n    return Http;\n}());\nexports.Http = Http;\nvar Jsonp = (function (_super) {\n    __extends(Jsonp, _super);\n    function Jsonp(backend, defaultOptions) {\n        _super.call(this, backend, defaultOptions);\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     */\n    Jsonp.prototype.request = function (url, options) {\n        var responseObservable;\n        if (lang_1.isString(url)) {\n            url =\n                new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Get, url));\n        }\n        if (url instanceof static_request_1.Request) {\n            if (url.method !== enums_1.RequestMethod.Get) {\n                exceptions_1.makeTypeError('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw exceptions_1.makeTypeError('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /** @nocollapse */\n    Jsonp.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    Jsonp.ctorParameters = [\n        { type: interfaces_1.ConnectionBackend, },\n        { type: base_request_options_1.RequestOptions, },\n    ];\n    return Jsonp;\n}(Http));\nexports.Jsonp = Jsonp;\n//# sourceMappingURL=http.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/http/src/http.js\n ** module id = 344\n ** module chunks = 0\n **/","\"use strict\";\nvar lang_1 = require('../src/facade/lang');\nvar enums_1 = require('./enums');\nvar headers_1 = require('./headers');\nvar http_utils_1 = require('./http_utils');\nvar url_search_params_1 = require('./url_search_params');\n// TODO(jeffbcross): properly implement body accessors\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {@link Http} and\n * {@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '@angular/http';\n *\n * @Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n */\nvar Request = (function () {\n    function Request(requestOptions) {\n        // TODO: assert that url is present\n        var url = requestOptions.url;\n        this.url = requestOptions.url;\n        if (lang_1.isPresent(requestOptions.search)) {\n            var search = requestOptions.search.toString();\n            if (search.length > 0) {\n                var prefix = '?';\n                if (lang_1.StringWrapper.contains(this.url, '?')) {\n                    prefix = (this.url[this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                this.url = url + prefix + search;\n            }\n        }\n        this._body = requestOptions.body;\n        this.contentType = this.detectContentType();\n        this.method = http_utils_1.normalizeMethodName(requestOptions.method);\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        // TODO(jeffbcross): implement behavior\n        this.headers = new headers_1.Headers(requestOptions.headers);\n        this.withCredentials = requestOptions.withCredentials;\n    }\n    /**\n     * Returns the request's body as string, assuming that body exists. If body is undefined, return\n     * empty\n     * string.\n     */\n    Request.prototype.text = function () { return lang_1.isPresent(this._body) ? this._body.toString() : ''; };\n    /**\n     * Returns the request's body as JSON string, assuming that body exists. If body is undefined,\n     * return\n     * empty\n     * string.\n     */\n    Request.prototype.json = function () { return lang_1.isPresent(this._body) ? JSON.stringify(this._body) : ''; };\n    /**\n     * Returns the request's body as array buffer, assuming that body exists. If body is undefined,\n     * return\n     * null.\n     */\n    Request.prototype.arrayBuffer = function () {\n        if (this._body instanceof ArrayBuffer)\n            return this._body;\n        throw 'The request body isn\\'t an array buffer';\n    };\n    /**\n     * Returns the request's body as blob, assuming that body exists. If body is undefined, return\n     * null.\n     */\n    Request.prototype.blob = function () {\n        if (this._body instanceof Blob)\n            return this._body;\n        if (this._body instanceof ArrayBuffer)\n            return new Blob([this._body]);\n        throw 'The request body isn\\'t either a blob or an array buffer';\n    };\n    /**\n     * Returns the content type of request's body based on its type.\n     */\n    Request.prototype.detectContentType = function () {\n        if (this._body == null) {\n            return enums_1.ContentType.NONE;\n        }\n        else if (this._body instanceof url_search_params_1.URLSearchParams) {\n            return enums_1.ContentType.FORM;\n        }\n        else if (this._body instanceof FormData) {\n            return enums_1.ContentType.FORM_DATA;\n        }\n        else if (this._body instanceof Blob) {\n            return enums_1.ContentType.BLOB;\n        }\n        else if (this._body instanceof ArrayBuffer) {\n            return enums_1.ContentType.ARRAY_BUFFER;\n        }\n        else if (this._body && typeof this._body == 'object') {\n            return enums_1.ContentType.JSON;\n        }\n        else {\n            return enums_1.ContentType.TEXT;\n        }\n    };\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     */\n    Request.prototype.getBody = function () {\n        switch (this.contentType) {\n            case enums_1.ContentType.JSON:\n                return this.json();\n            case enums_1.ContentType.FORM:\n                return this.text();\n            case enums_1.ContentType.FORM_DATA:\n                return this._body;\n            case enums_1.ContentType.TEXT:\n                return this.text();\n            case enums_1.ContentType.BLOB:\n                return this.blob();\n            case enums_1.ContentType.ARRAY_BUFFER:\n                return this.arrayBuffer();\n            default:\n                return null;\n        }\n    };\n    return Request;\n}());\nexports.Request = Request;\nvar noop = function () { };\nvar w = typeof window == 'object' ? window : noop;\nvar FormData = w['FormData'] || noop;\nvar Blob = w['Blob'] || noop;\nvar ArrayBuffer = w['ArrayBuffer'] || noop;\n//# sourceMappingURL=static_request.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/http/src/static_request.js\n ** module id = 345\n ** module chunks = 0\n **/","import { Component } from '@angular/core';\r\nimport { NavigationBoxComponent } from './navigation-boxes/navigation-box.component';\r\n import { TopMenuComponent } from './top-menu/top-menu.component';\r\n@Component({\r\n  selector: 'body',\r\n  templateUrl: ('./src/app/app.component.html'),\r\n  directives: [TopMenuComponent, NavigationBoxComponent]\r\n})\r\nexport class AppComponent { }\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/app.component.ts\n **/","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationBox } from './navigation-box.model';\r\nimport { NavigationBoxService } from './navigation-box.service';\r\n\r\n@Component({\r\n    selector: '<navigation-boxes>',\r\n    templateUrl: 'https://leilap.github.io/DemoWebsiteNg2/src/app/navigation-boxes/navigation-box.component.html',\r\n    providers: [NavigationBoxService]\r\n})\r\n\r\nexport class NavigationBoxComponent implements OnInit {\r\n    errorMessage: string;\r\n    navigationBoxes: NavigationBox[];\r\n    constructor(private navigationBoxService: NavigationBoxService) { }\r\n    \r\n    getNavigationBoxes() {\r\n        this.navigationBoxService.getNavigationBoxes()\r\n            .subscribe(response => this.navigationBoxes = response,\r\n            error => this.errorMessage = <any>error\r\n            );\r\n    };\r\n    isCollapsed(navBox: NavigationBox) {\r\n        return navBox.isHidden;\r\n    };\r\n    isHovered(navBox: NavigationBox) {\r\n        return navBox.isHovered;\r\n    };\r\n    mouseEventFunc(navBox: NavigationBox) {\r\n        navBox.isHovered = !navBox.isHovered;\r\n        return navBox.isHovered;\r\n    };\r\n    ngOnInit() {\r\n        this.getNavigationBoxes();\r\n    };\r\n    \r\n    toggle(navBox: NavigationBox, repeaterIndex: number) {\r\n        navBox.isHidden = !navBox.isHidden;\r\n        this.navigationBoxes.forEach(function (item, i) {\r\n            if( repeaterIndex != i )\r\n            {\r\n                item.isHidden = true;\r\n            }\r\n        })\r\n    };\r\n\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/navigation-boxes/navigation-box.component.ts\n **/","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport { NavigationBox } from './navigation-box.model';\r\n\r\n@Injectable()\r\nexport class NavigationBoxService {\r\n    apiUrl = \"./src/app/navigation-boxes/navigation-box-data.json\";\r\n    constructor(private http: Http){\r\n     };\r\n     \r\n    getNavigationBoxes() {\r\n    return this.http.get(this.apiUrl)\r\n      .map((responseData) => {\r\n        return responseData.json().data;\r\n      })\r\n      .map((navBoxes: Array<any>) => {\r\n        let result:Array<NavigationBox> = [];\r\n        if(navBoxes){\r\n          navBoxes.forEach((navBox) => {\r\n            result.push(new NavigationBox(navBox.linkDescription, \r\n                                          navBox.linkText, \r\n                                          navBox.linkUrl))\r\n          });\r\n        }\r\n        return result;\r\n      })\r\n      .catch(this.handleError);\r\n  }\r\n  private handleError(error: Response) {\r\n    console.error(error);\r\n    return Observable.throw(error.json().error || 'Server error');\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/navigation-boxes/navigation-box.service.ts\n **/","export class NavigationBox{\r\n    isHidden: boolean;\r\n    isHovered: boolean;\r\n    linkDescription: string;\r\n    linkText: string;\r\n    linkUrl: string;\r\n        \r\n    constructor(linkDescription: string, linkText: string, linkUrl:string)\r\n    {\r\n        this.isHidden = true;\r\n        this.isHovered = false;\r\n        this.linkDescription = linkDescription;\r\n        this.linkText = linkText;\r\n        this.linkUrl = linkUrl;\r\n    }\r\n    public displayShortDescription(description: string, length: number){\r\n        var trimmedString: string = description.substring(0, length) + \"...\";\r\n        return trimmedString;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/navigation-boxes/navigation-box.model.ts\n **/","import { Component, OnInit} from \"@angular/core\";\r\nimport { TopMenuItem} from \"./top-menu.model\";\r\nimport { TopMenuService} from \"./top-menu.service\";\r\n\r\n@Component({\r\n    selector: \"<nav>\",\r\n    templateUrl: './src/app/top-menu/top-menu.component.html',\r\n    providers: [TopMenuService]\r\n})\r\nexport class TopMenuComponent implements OnInit{\r\n    errorMessage: string;\r\n    topMenuItems: TopMenuItem[];\r\n    show: boolean = false;\r\n    constructor(private topMenuService: TopMenuService) { }\r\n    \r\n    getNavigationBoxes() {\r\n       this.topMenuService.getMenuItems()\r\n            .subscribe(response => this.topMenuItems = response,\r\n            error => this.errorMessage = <any>error\r\n            );\r\n    };\r\n    \r\n       ngOnInit() {\r\n        this.getNavigationBoxes();\r\n    };\r\n    displayMenuForMobile(){\r\n        this.show = !this.show\r\n    }\r\n   \r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/top-menu/top-menu.component.ts\n **/","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport { TopMenuItem } from './top-menu.model';\r\n\r\n@Injectable()\r\nexport class TopMenuService {\r\n    apiUrl = \"./src/app/top-menu/top-menu-data.json\";\r\n   constructor(private http: Http) {\r\n    };\r\n    \r\n     \r\n    getMenuItems() {\r\n        return this.http.get(this.apiUrl)\r\n            .map((responseData) => {\r\n                return responseData.json().data;\r\n            })\r\n            .map((menuItems: Array<any>) => {\r\n                let results: Array<TopMenuItem> = [];\r\n                if (menuItems) {\r\n                    menuItems.forEach((item) => {\r\n                        results.push(new TopMenuItem(\r\n                            item.title,\r\n                            item.linkUrl\r\n                        ))\r\n                    })\r\n                };\r\n                return results;\r\n            })\r\n            .catch(this.handleError)\r\n    };\r\n    private handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    };\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/top-menu/top-menu.service.ts\n **/","export class TopMenuItem{\r\n    title: string;\r\n    linkUrl: string;\r\n    \r\n    constructor(title: string, linkUrl: string){\r\n        this.title = title;\r\n        this.linkUrl = linkUrl;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/top-menu/top-menu.model.ts\n **/"],"sourceRoot":""}